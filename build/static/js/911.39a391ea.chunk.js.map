{"version":3,"file":"static/js/911.39a391ea.chunk.js","mappings":"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","sources":["components/ChatElement.js","components/Search/Search.js","components/Search/SearchIconWrapper.js","components/Search/StyledInputBase.js","pages/dashboard/Chats.js","components/StyledBadge.js","components/Conversation/Header.js","components/Conversation/Footer.js","components/Conversation/MsgTypes.js","components/Conversation/Message.js","components/Conversation/index.js","components/Contact.js","components/SharedMessages.js","components/StarredMessages.js","pages/dashboard/GeneralApp.js"],"sourcesContent":["import { faker } from \"@faker-js/faker\";\r\nimport { Avatar, Badge, Box, Stack, Typography } from \"@mui/material\";\r\n\r\nimport { useTheme, styled } from \"@mui/material/styles\";\r\n\r\nconst StyledBadge = styled(Badge)(({ theme }) => ({\r\n    '& .MuiBadge-badge': {\r\n        backgroundColor: '#44b700',\r\n        color: '#44b700',\r\n        boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n        '&::after': {\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            width: '100%',\r\n            height: '100%',\r\n            borderRadius: '50%',\r\n            animation: 'ripple 1.2s infinite ease-in-out',\r\n            border: '1px solid currentColor',\r\n            content: '\"\"',\r\n        },\r\n    },\r\n    '@keyframes ripple': {\r\n        '0%': {\r\n            transform: 'scale(.8)',\r\n            opacity: 1,\r\n        },\r\n        '100%': {\r\n            transform: 'scale(2.4)',\r\n            opacity: 0,\r\n        },\r\n    },\r\n}));\r\n\r\nconst ChatElement = ({ id, name, img, msg, time, unread, online }) => {\r\n    const theme = useTheme();\r\n    return (\r\n        <Box sx={{\r\n            width: \"100%\",\r\n            borderRadius: 1,\r\n            backgroundColor: theme.palette.mode === \"light\" ? \"#fff\" : theme.palette.background.default,\r\n        }}   \r\n            p={2}\r\n        >\r\n            <Stack\r\n                direction={\"row\"}\r\n                alignItems={\"center\"}\r\n                justifyContent=\"space-between\"\r\n            >\r\n                <Stack direction={\"row\"} spacing={2}>\r\n                    {online ? <StyledBadge\r\n                        overlap=\"circular\"\r\n                        anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\r\n                        variant=\"dot\">\r\n                        <Avatar src={faker.image.avatar()} />\r\n                    </StyledBadge> : <Avatar src={faker.image.avatar()} />}\r\n\r\n                    <Stack spacing={0.3}>\r\n                        <Typography variant='subtitle2'>\r\n                            {name}\r\n                        </Typography>\r\n                        <Typography variant='caption'>\r\n                            {msg}\r\n                        </Typography>\r\n                    </Stack>\r\n                </Stack>\r\n                <Stack spacing={2} alignItems=\"center\">\r\n                    <Typography sx={{ fontWeight: 600 }} variant='caption'>\r\n                        {time}\r\n                    </Typography>\r\n                    <Badge color='primary' badgeContent={unread}></Badge>\r\n                </Stack>\r\n            </Stack>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default ChatElement;","import {styled, alpha} from \"@mui/material/styles\";\r\n\r\nconst Search = styled(\"div\")(({ theme }) => ({\r\n    position: \"relative\",\r\n    borderRadius: 20,\r\n    backgroundColor: alpha(theme.palette.background.default, 1),\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: \"100%\"\r\n}));\r\n\r\nexport default Search;","import {styled} from \"@mui/material/styles\";\r\n\r\nconst SearchIconWrapper = styled(\"div\")(({ theme }) => ({\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n}));\r\n\r\nexport default SearchIconWrapper;","import InputBase from \"@mui/material/InputBase\";\r\nimport {styled} from \"@mui/material/styles\";\r\n\r\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n    color: \"inherit\",\r\n    \"& .MuiInputBase-input\": {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n        width: \"100%\",\r\n    }\r\n}));\r\n\r\nexport default StyledInputBase;","import React from 'react';\r\nimport {\r\n    Box,\r\n    Stack,\r\n    IconButton,\r\n    Typography,\r\n    Button,\r\n    Divider\r\n} from '@mui/material';\r\nimport { ArchiveBox, CircleDashed, MagnifyingGlass } from 'phosphor-react';\r\nimport {  useTheme } from '@mui/material/styles';\r\nimport { ChatList } from \"../../data\";\r\nimport { SimpleBarStyle } from \"../../components/Scrollbar\";\r\nimport {\r\n    Search,\r\n    SearchIconWrapper,\r\n    StyledInputBase,\r\n} from \"../../components/Search\";\r\nimport ChatElement from '../../components/ChatElement';\r\n\r\nconst Chats = () => {\r\n    const theme = useTheme();\r\n    return (\r\n        <Box sx={{\r\n            position: \"relative\",\r\n            width: 320,\r\n            backgroundColor: theme.palette.mode === \"light\" ? \"#F8FAFF\" : theme.palette.background.paper,\r\n            boxShadow: \"0px 0px 2px rgba(0, 0, 0, 0.25)\",\r\n        }}>\r\n            <Stack p={3}\r\n                spacing={2}\r\n                sx={{ height: \"100vh\" }}>\r\n                <Stack\r\n                    alignItems={\"center\"}\r\n                    justifyContent=\"space-between\"\r\n                    direction=\"row\"\r\n                >\r\n                    <Typography variant=\"h5\">\r\n                        Chats\r\n                    </Typography>\r\n                    <IconButton sx={{ width: \"max-content\" }}>\r\n                        <CircleDashed />\r\n                    </IconButton>\r\n                </Stack>\r\n\r\n                <Stack sx={{ width: \"100%\" }}>\r\n                    <Search>\r\n                        <SearchIconWrapper>\r\n                            <MagnifyingGlass color=\"#709CE6\" />\r\n                        </SearchIconWrapper>\r\n                        <StyledInputBase\r\n                            placeholder=\"Search…\" />\r\n                    </Search>\r\n                </Stack>\r\n\r\n                <Stack spacing={1}>\r\n                    <Stack direction={\"row\"}\r\n                        alignItems={\"center\"}\r\n                        spacing={1.5}>\r\n                        <ArchiveBox size={24} />\r\n                        <Button variant=\"text\">Archive</Button>\r\n                    </Stack>\r\n                    <Divider />\r\n                    <Stack sx={{ flexGrow: 1, overflowY: \"scroll\", height: \"100%\" }}>\r\n                        <SimpleBarStyle timeout={500} clickOnTrack={false}>\r\n                            <Stack>\r\n                                {/*  */}\r\n                                <Typography variant=\"subtitle2\" sx={{ color: \"#676667\" }}>\r\n                                    Pinned\r\n                                </Typography>\r\n                                {/* Chat Lists */}\r\n                            </Stack>\r\n                            <Stack>\r\n                                {/*  */}\r\n                                <Typography variant=\"subtitle2\" sx={{ color: \"#676667\" }}>\r\n                                    All Groups\r\n                                </Typography>\r\n                                {/* Chat Lists */}\r\n                            </Stack>\r\n\r\n                        </SimpleBarStyle>\r\n\r\n                    </Stack>\r\n                </Stack>\r\n                <Box\r\n                    sx={{\r\n                        flexGrow: 1,\r\n                        overflowY: \"auto\",\r\n                        '&::-webkit-scrollbar': {\r\n                            width: '6px',\r\n                        },\r\n                        '&::-webkit-scrollbar-thumb': {\r\n                            backgroundColor: theme.palette.mode === \"light\" ? '#ccc' : '#555',\r\n                            borderRadius: '4px',\r\n                        },\r\n                        '&::-webkit-scrollbar-thumb:hover': {\r\n                            backgroundColor: theme.palette.mode === \"light\" ? '#bbb' : '#444',\r\n                        },\r\n                    }}>\r\n                    <SimpleBarStyle timeout={500} clickOnTrack={false}>\r\n                        <Stack spacing={2}>\r\n                            <Typography variant='subtitle2' sx={{ color: \"#676767\" }}>\r\n                                Pinned\r\n                            </Typography>\r\n                            {ChatList.filter((el) => el.pinned).map((el) => {\r\n                                return <ChatElement key={el.id} {...el} />;\r\n                            })}\r\n                        </Stack>\r\n                        <Stack spacing={2}>\r\n                            <Typography variant='subtitle2' sx={{ color: \"#676767\" }}>\r\n                                All Chats\r\n                            </Typography>\r\n                            {ChatList.filter((el) => !el.pinned).map((el) => {\r\n                                return <ChatElement key={el.id} {...el} />;\r\n                            })}\r\n                        </Stack>\r\n                    </SimpleBarStyle>\r\n                </Box>\r\n            </Stack>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default Chats;\r\n","import { styled } from \"@mui/material/styles\";\r\nimport { Badge } from \"@mui/material\";\r\n\r\nconst StyledBadge = styled(Badge)(({ theme }) => ({\r\n    '& .MuiBadge-badge': {\r\n        backgroundColor: '#44b700',\r\n        color: '#44b700',\r\n        boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n        '&::after': {\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            width: '100%',\r\n            height: '100%',\r\n            borderRadius: '50%',\r\n            animation: 'ripple 1.2s infinite ease-in-out',\r\n            border: '1px solid currentColor',\r\n            content: '\"\"',\r\n        },\r\n    },\r\n    '@keyframes ripple': {\r\n        '0%': {\r\n            transform: 'scale(.8)',\r\n            opacity: 1,\r\n        },\r\n        '100%': {\r\n            transform: 'scale(2.4)',\r\n            opacity: 0,\r\n        },\r\n    },\r\n}));\r\n\r\nexport default StyledBadge;","import React from \"react\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { \r\n    Avatar, \r\n    Box, \r\n    Stack, \r\n    IconButton, \r\n    Typography,\r\n      } from \"@mui/material\";\r\nimport {  MagnifyingGlass, VideoCamera, Phone } from \"phosphor-react\";\r\nimport { faker } from \"@faker-js/faker\";\r\nimport StyledBadge from \"../StyledBadge\";\r\nimport { useDispatch } from \"../../redux/store\";\r\nimport { ToggleSidebar } from \"../../redux/slices/app\";\r\n// import { useDispatch } from \"react-redux\";\r\n\r\nconst Header = () => {\r\n    const theme = useTheme();\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <Box\r\n            p={2}\r\n            sx={{\r\n                height: 100,\r\n                width: \"100%\",\r\n                backgroundColor: \r\n                theme.palette.mode === \"light\" \r\n                ? \"#F8FAFF\" \r\n                : theme.palette.background.paper,\r\n                boxShadow: \"0px 0px 2px rgba(0, 0, 0, 0.25)\",\r\n            }}>\r\n\r\n            <Stack\r\n                alignItems={\"center\"}\r\n                direction={\"row\"}\r\n                justifyContent={\"space-between\"}\r\n                sx={{\r\n                    width: \"100%\",\r\n                    height: \"100%\"\r\n                }}>\r\n                <Stack onClick={() =>{\r\n                    //\r\n                    dispatch(ToggleSidebar());\r\n                }}\r\n                    direction={\"row\"}\r\n                    spacing={2}>\r\n                    <Box>\r\n                        <StyledBadge\r\n                            overlap=\"circular\"\r\n                            anchorOrigin={{\r\n                                vertical: \"bottom\",\r\n                                horizontal: \"right\",\r\n\r\n                            }}\r\n                            variant=\"dot\"\r\n                        >\r\n\r\n                            <Avatar alt={faker.name.fullName()} src={faker.image.avatar()} />\r\n                        </StyledBadge>\r\n                    </Box>\r\n                    <Stack spacing={0.2}>\r\n                        <Typography variant=\"subtitle2\"> {faker.name.fullName()}</Typography>\r\n                        <Typography variant=\"caption\"> Online </Typography>\r\n                    </Stack>\r\n                </Stack>\r\n                <Stack\r\n                    direction={\"row\"}\r\n                    alignItems={\"center\"}\r\n                    spacing={3}\r\n                >\r\n                    <IconButton>\r\n                        <VideoCamera />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <Phone />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <MagnifyingGlass />\r\n                    </IconButton>\r\n\r\n                </Stack>\r\n\r\n            </Stack>\r\n\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport {\r\n    Box,\r\n    IconButton,\r\n    InputAdornment,\r\n    Stack,\r\n    Input\r\n} from \"@mui/material\";\r\nimport{\r\n    Camera,\r\n    File,\r\n    Image,\r\n    LinkSimple,\r\n    PaperPlaneTilt,\r\n    Smiley,\r\n    Sticker,\r\n    User,\r\n} from \"phosphor-react\";\r\n\r\n\r\nimport { useTheme, styled } from \"@mui/material/styles\";\r\nimport data from '@emoji-mart/data'\r\nimport Picker from '@emoji-mart/react'\r\nimport { Fab } from \"@mui/material\";\r\nimport Tooltip from '@mui/material/Tooltip';\r\n// import { Form } from \"react-router-dom\";\r\n\r\nconst StyledInput = styled(Input)(({ theme }) => ({\r\n    borderRadius: '20px',\r\n    backgroundColor: theme.palette.mode === 'dark' ? '#333' : '#f0f2f5',\r\n    padding: '10px',\r\n    '& .MuiInputBase-input': {\r\n        fontSize: '14px',\r\n        color: theme.palette.text.primary,\r\n    },\r\n}));\r\n\r\nconst Actions = [\r\n    {\r\n        color: \"#4da5fe\",\r\n        icon: <Image size={24} />,\r\n        y: 102,\r\n        title: \"Photo/Video\",\r\n    },\r\n    {\r\n        color: \"#1b8cfe\",\r\n        icon: <Sticker size={24} />,\r\n        y: 172,\r\n        title: \"Sticker\",\r\n    },\r\n    {\r\n        color: \"#0172e4\",\r\n        icon: <Camera size={24} />,\r\n        y: 242,\r\n        title: \"Image\",\r\n    },\r\n    {\r\n        color: \"#0159b2\",\r\n        icon: <File size={24} />,\r\n        y: 312,\r\n        title: \"Doument\",\r\n    },\r\n    {\r\n        color: \"#013f7f\",\r\n        icon: <User size={24} />,\r\n        y: 382,\r\n        title: \"Contact\",\r\n    },\r\n\r\n];\r\n\r\nconst ChatInput = ({ setOpenPicker }) => {\r\n    const [openActions, setOpenActions] = React.useState(false);\r\n    return (\r\n        <StyledInput\r\n            fullWidth\r\n            placeholder=\"write a message...\"\r\n            variant=\"filled\"\r\n            disableUnderline\r\n            startAdornment={\r\n                <Stack sx={{ width: 'max-content' }}>\r\n                    <Stack sx={{ position: \"relative,\", display: openActions ? \"inline-block\" : \"none\" }}>\r\n                        {Actions.map ((el) =>(\r\n                            <Tooltip placement=\"right\" title ={el.title}>\r\n                                <Fab sx={{position: \"absolute\", top : -el.y, backgroundColor: el.color}}>\r\n                               {el.icon}\r\n                                </Fab>\r\n                            </Tooltip>\r\n                            \r\n                        ))}\r\n\r\n                    </Stack>\r\n                    <InputAdornment position=\"start\">\r\n                        <IconButton onClick={() =>{\r\n                            setOpenActions((prev) => !prev);\r\n                        }}>\r\n                            <LinkSimple />\r\n                        </IconButton>\r\n                    </InputAdornment>\r\n                </Stack>\r\n            }\r\n            endAdornment={<InputAdornment position=\"end\">\r\n                <IconButton onClick={() => {\r\n                    setOpenPicker((prev) => !prev);\r\n                }}>\r\n                    <Smiley />\r\n                </IconButton>\r\n            </InputAdornment>}\r\n        />\r\n    )\r\n}\r\nconst Footer = () => {\r\n    const theme = useTheme();\r\n    // for toggle emoji selector \r\n    const [openPicker, setOpenPicker] = React.useState(false);\r\n    return (\r\n        <Box\r\n            sx={{\r\n                height: 100,\r\n                width: \"100%\",\r\n                backgroundColor: theme.palette.mode === \"light\" ? \"#F8FAFF\" : theme.palette.background.paper,\r\n                boxShadow: \"0px 0px 2px rgba(0, 0, 0, 0.25)\",\r\n            }}>\r\n\r\n            <Stack\r\n                direction={\"row\"}\r\n                alignItems={\"center\"}\r\n                spacing={3}\r\n            >\r\n                <Stack sx={{ width: \"100%\" }}>\r\n                    {/* ChatInput */}\r\n                    <ChatInput setOpenPicker={setOpenPicker} />\r\n                    <Box sx={{ display: openPicker ? \"inline\" : \"none\", zIndex: 10, position: \"fixed\", bottom: 81, right: 100 }}>\r\n                        <Picker theme={theme.palette.mode} data={data} onEmojiSelect={console.log} />\r\n                    </Box>\r\n\r\n\r\n                </Stack>\r\n\r\n\r\n                <Box sx={{\r\n                    height: 48,\r\n                    width: 48,\r\n                    backgroundColor: theme.palette.primary.main,\r\n                    borderRadius: '50%',\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center'\r\n                }}>\r\n                    <IconButton>\r\n                        <PaperPlaneTilt color=\"#fff\" />\r\n                    </IconButton>\r\n                </Box>\r\n            </Stack>\r\n\r\n        </Box>\r\n\r\n    )\r\n}\r\n// day 7\r\nexport default Footer;","import React from \"react\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { Stack, Divider, Typography, Box, Link, IconButton, Menu, MenuItem } from \"@mui/material\";\r\nimport { DownloadSimple, Image , DotsThreeVertical} from \"phosphor-react\";\r\nimport { Message_options } from \"../../data\";\r\n\r\nconst DocMsg = ({ el, menu }) => {\r\n    const theme = useTheme();\r\n    return (\r\n        <Stack direction={\"row\"} justifyContent={el.incoming ? \"start\" : \"end\"} >\r\n            <Box p={1.5} sx={{\r\n                backgroundColor: el.incoming\r\n                    ? theme.palette.background.default\r\n                    : theme.palette.primary.main,\r\n                borderRadius: 1.5, // 1.5*8 => 12px\r\n                width: \"max-content\",\r\n\r\n            }}>\r\n\r\n                <Stack spacing={2}>\r\n                    <Stack p={2} direction={\"row\"} spacing={3} alignItems={\"center\"} sx={{ backgroundColor: theme.palette.background.paper, borderRadius: 1 }}>\r\n                        <Image size={48} />\r\n                        <Typography variant=\"caption\">Abstract.png</Typography> {/* Move this line to be beside the Image */}\r\n                        <IconButton>\r\n                            <DownloadSimple />\r\n                        </IconButton>\r\n                    </Stack>\r\n                    <Typography variant=\"body2\" sx={{ color: el.incoming ? theme.palette.text : \"#fff\" }}>\r\n                        {el.message}\r\n                    </Typography>\r\n                </Stack>\r\n            </Box>\r\n            {menu &&  <MessageOptions/>}\r\n           \r\n        </Stack>\r\n\r\n    )\r\n}\r\n\r\nconst LinkMsg = ({ el, menu }) => {\r\n    const theme = useTheme();\r\n    return (\r\n        <Stack direction={\"row\"} justifyContent={el.incoming ? \"start\" : \"end\"}>\r\n            <Box p={1.5} sx={{\r\n                backgroundColor: el.incoming\r\n                    ? theme.palette.background.default\r\n                    : theme.palette.primary.main,\r\n                borderRadius: 1.5, // 1.5*8 => 12px\r\n                width: \"max-content\",\r\n            }}>\r\n                <Stack spacing={2}>\r\n                    <Stack p={2} spacing={3} alignItems={\"center\"} sx={{ backgroundColor: theme.palette.background.paper, borderRadius: 1 }}>\r\n                        <img src={el.preview}\r\n                            alt={el.message}\r\n                            style={{\r\n                                maxHeight: 210,\r\n                                borderRadius: \"10px\"\r\n                            }}\r\n                        />\r\n                        <Stack spacing={2}>\r\n                            <Typography variant=\"subtitle2\"> Creating Chat App</Typography>\r\n                            <Typography variant=\"subtitle2\" sx={{ color: theme.palette.primary.main }} component={Link}\r\n                                to=\"//https://www.youtube.com\"\r\n                            > www.youtube.com\r\n                            </Typography>\r\n                        </Stack>\r\n                        <Typography variant=\"body2\" color={el.incoming ? theme.palette.text : \"#fff\"}>  {el.message}\r\n                        </Typography>\r\n                    </Stack>\r\n                </Stack>\r\n            </Box>\r\n            {menu &&  <MessageOptions/>}\r\n        </Stack>\r\n    )\r\n}\r\n\r\nconst ReplyMsg = ({ el, menu }) => {\r\n    const theme = useTheme();\r\n    return (\r\n        <Stack direction={\"row\"} justifyContent={el.incoming ? \"start\" : \"end\"}>\r\n            <Box p={1.5} sx={{\r\n                backgroundColor: el.incoming\r\n                    ? theme.palette.background.default\r\n                    : theme.palette.primary.main,\r\n                borderRadius: 1.5, // 1.5*8 => 12px\r\n                width: \"max-content\",\r\n            }}>\r\n                <Stack spacing={2}>\r\n                    <Stack p={2} direction=\"column\" spacing={3} alignItems={\"center\"} sx={{ backgroundColor: theme.palette.background.paper, borderRadius: 1 }}>\r\n                        {el.message}\r\n\r\n                    </Stack>\r\n                </Stack>\r\n\r\n            </Box>\r\n            {menu &&  <MessageOptions/>}\r\n        </Stack>\r\n    )\r\n}\r\n\r\nconst MediaMsg = ({ el , menu}) => {\r\n    const theme = useTheme();\r\n    return (\r\n        <Stack direction={\"row\"} justifyContent={el.incoming ? \"start\" : \"end\"}\r\n        >\r\n            <Box p={1.5} sx={{\r\n                backgroundColor: el.incoming\r\n                    ? theme.palette.background.default\r\n                    : theme.palette.primary.main,\r\n                borderRadius: 1.5, // 1.5*8 => 12px\r\n                width: \"max-content\",\r\n            }}\r\n            >\r\n                <Stack spacing={1}>\r\n                    <img src={el.img}\r\n                        alt={el.message}\r\n                        style={{\r\n                            maxWidth: \"100%\", // Ensure the image doesn't exceed the box width\r\n                            maxHeight: \"210px\", // Set maximum height\r\n                            borderRadius: \"10px\",\r\n\r\n                        }}\r\n                    />\r\n                    <Typography variant=\"body2\" color={el.incoming ? theme.palette.text : \"#fff\"}>\r\n                        {el.message}\r\n                    </Typography>\r\n                </Stack>\r\n            </Box>\r\n            {menu &&  <MessageOptions/>}\r\n        </Stack>\r\n    )\r\n}\r\n\r\nconst TextMsg = ({ el, menu }) => {\r\n    const theme = useTheme();\r\n    return (\r\n        <Stack direction={\"row\"} justifyContent={el.incoming ? \"start\" : \"end\"}>\r\n            <Box p={1.5} sx={{\r\n                backgroundColor: el.incoming\r\n                    ? theme.palette.background.default\r\n                    : theme.palette.primary.main,\r\n                borderRadius: 1.5, // 1.5*8 => 12px\r\n                width: \"max-content\",\r\n            }}>\r\n                <Typography variant=\"body2\" color={el.incoming ? theme.palette.text : \"#fff\"}>\r\n                    {el.message}\r\n                </Typography>\r\n            </Box>\r\n            {/*  */}\r\n            {menu &&  <MessageOptions/>}\r\n        </Stack>\r\n    );\r\n};\r\n\r\nconst Timeline = ({ el }) => {\r\n    const theme = useTheme();\r\n\r\n    return (\r\n        <Stack direction={\"row\"} alignItems=\"center\" justifyContent=\"space-between\">\r\n            <Divider width=\"46%\" />\r\n            <Typography variant=\"caption\" sx={{ color: theme.palette.text }} >{el.text}</Typography>\r\n            <Divider width=\"46%\" />\r\n        </Stack>\r\n    );\r\n};\r\n\r\nconst MessageOptions = () => {\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <DotsThreeVertical \r\n             id=\"basic-button\"\r\n             aria-controls={open ? 'basic-menu' : undefined}\r\n             aria-haspopup=\"true\"\r\n             aria-expanded={open ? 'true' : undefined}\r\n             onClick={handleClick}\r\n             size={20}/>\r\n            <Menu\r\n                id=\"basic-menu\"\r\n                anchorEl={anchorEl} \r\n                open={open}\r\n                onClose={handleClose}\r\n                MenuListProps={{\r\n                    'aria-labelledby': 'basic-button',\r\n                }}\r\n            >\r\n                <Stack spacing={1} px={1}>\r\n                    {Message_options.map((el) => (\r\n                        <MenuItem onClick={() => { /* Perform some action here */ }}>{el.title}</MenuItem>\r\n                    ))}\r\n                </Stack>\r\n            </Menu>\r\n        </>\r\n    );\r\n}\r\n\r\nexport { Timeline, TextMsg, MediaMsg, ReplyMsg, LinkMsg, DocMsg };\r\n\r\n\r\n","import React from \"react\";\r\nimport { Box, Stack } from \"@mui/material\"\r\nimport { Chat_History } from \"../../data\";\r\nimport { DocMsg, LinkMsg, MediaMsg, ReplyMsg, Timeline, TextMsg } from \"./MsgTypes\";\r\n\r\nconst Message = ({menu}) => {\r\n    return (\r\n        <Box p={3}>\r\n            <Stack spacing={3}>\r\n                {Chat_History.map((el, index) => {\r\n                    switch (el.type) {\r\n                        case \"divider\":\r\n                            return <Timeline key={index} el={el}/>;\r\n                        case \"msg\":\r\n                            switch (el.subtype) {\r\n                                case \"img\":\r\n                                    return <MediaMsg key={index} el={el} menu={menu} />;\r\n                                case \"doc\":\r\n                                    return <DocMsg key={index} el={el}  menu={menu}/>;\r\n                                case \"link\":\r\n                                    return <LinkMsg key={index} el={el}  menu={menu}/>;\r\n                                case \"reply\":\r\n                                    return <ReplyMsg key={index} el={el}  menu={menu}/>;\r\n                                default:\r\n                                    return <TextMsg key={index} el={el}  menu={menu}/>;\r\n                            }\r\n                        default:\r\n                            return null;\r\n                    }\r\n                })}\r\n            </Stack>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport { Stack, Box, useTheme } from \"@mui/material\";\r\nimport Header from './Header';\r\nimport Footer from './Footer';\r\nimport Message from './Message';\r\n\r\nconst Conversation = () => {\r\n    const theme = useTheme(); // Add this line to access the theme\r\n\r\n    return (\r\n        <Stack\r\n            height={\"100%\"}\r\n            maxHeight={\"100vh\"}\r\n            width={\"auto\"}>\r\n            {/* chat header*/}\r\n            <Header/>\r\n\r\n            {/* msg */}\r\n            <Box\r\n                width={\"100%\"}\r\n                sx={{\r\n                    flexGrow: 1,\r\n                    overflowY: \"auto\",\r\n                    '&::-webkit-scrollbar': {\r\n                        width: '6px',\r\n                    },\r\n                    '&::-webkit-scrollbar-thumb': {\r\n                        backgroundColor: theme.palette.mode === \"light\" ? '#ccc' : '#555',\r\n                        borderRadius: '4px',\r\n                    },\r\n                    '&::-webkit-scrollbar-thumb:hover': {\r\n                        backgroundColor: theme.palette.mode === \"light\" ? '#bbb' : '#444',\r\n                    },\r\n                }}>\r\n                 <Message menu={true}/>        \r\n            </Box>\r\n            \r\n            {/* Chat Footer*/}\r\n            <Footer/>\r\n        </Stack>\r\n    )\r\n}\r\n\r\nexport default Conversation;\r\n","import React, { useState } from \"react\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { ToggleSidebar, UpdateSidebarType } from \"../redux/slices/app\";\r\nimport {\r\n    Avatar,\r\n    Box,\r\n    Button,\r\n    IconButton,\r\n    Stack,\r\n    Typography,\r\n    Divider,\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogActions,\r\n    Slide\r\n} from \"@mui/material\";\r\nimport { faker } from \"@faker-js/faker\";\r\nimport { X, Phone, VideoCamera, CaretRight, Star, Bell, Prohibit, Trash } from \"phosphor-react\";\r\nimport AntSwitch from \"./AntSwitch\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst BlockDialog = ({ open, handleClose }) => {\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n            onClose={handleClose}\r\n            aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n            <DialogTitle>Block this contact</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-slide-description\">\r\n                    Are you sure you want to block this Contact?\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleClose}>Cancel</Button>\r\n                <Button onClick={handleClose}>Yes</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n\r\n    )\r\n}\r\nconst DeleteDialog = ({ open, handleClose }) => {\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n            onClose={handleClose}\r\n            aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n            <DialogTitle>Delete this contact</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-slide-description\">\r\n                    Are you sure you want to delete this Contact?\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleClose}>Cancel</Button>\r\n                <Button onClick={handleClose}>Yes</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n\r\n    )\r\n}\r\n\r\nconst Contact = () => {\r\n    const theme = useTheme();\r\n    const dispatch = useDispatch();\r\n\r\n    const [openBlock, setOpenBlock] = useState(false);\r\n    const [openDelete, setOpenDelete] = useState(false);\r\n\r\n    const handleCloseBlock =() =>{\r\n        setOpenBlock(false);\r\n    }\r\n    const handleCloseDelete =() =>{\r\n        setOpenDelete(false);\r\n    }\r\n\r\n    return (\r\n        <Box sx={{ width: 320, height: \"100vh\" }}>\r\n            <Stack sx={{ height: \"100%\" }}>\r\n                {/* Header */}\r\n                <Box sx={{\r\n                    boxShadow: \"0px 0px 2px rgba(0, 0, 0.25)\",\r\n                    width: \"100%\",\r\n                    backgroundColor: theme.palette.mode === \"light\" ? \"#F8FAFF\" : theme.palette.background,\r\n                }}>\r\n                    <Stack sx={{ height: \"100%\", p: 2 }} direction={\"row\"} alignItems={\"center\"} justifyContent={\"space-between\"} spacing={3}>\r\n                        <Typography variant=\"subtitle2\">\r\n                            Contact Info\r\n                        </Typography>\r\n                        <IconButton onClick={() => {\r\n                            dispatch(ToggleSidebar());\r\n                        }}>\r\n                            <X />\r\n                        </IconButton>\r\n\r\n                    </Stack>\r\n\r\n                </Box>\r\n                {/* Body */}\r\n                <Stack sx={{ height: \"100%\", position: \"relative\", flexGrow: 1, overflowY: \"scroll\" }} p={3} spacing={3}>\r\n                    <Stack alignItems={\"center\"} direction={\"row\"} spacing={2}>\r\n                        <Avatar src={faker.image.avatar()} alt={faker.name.firstName()} sx={{ height: 64, width: 64 }} />\r\n                        <Stack spacing={0.5}>\r\n                            <Typography variant=\"article\" fontWeight={600}>\r\n                                {faker.name.fullName()}\r\n                            </Typography>\r\n                            <Typography variant=\"body2\" fontWeight={500}>\r\n                                {\"+91 729 2829 2992\"}\r\n                            </Typography>\r\n                        </Stack>\r\n                    </Stack>\r\n                    <Stack direction={\"row\"}\r\n                        alignItems={\"center\"}\r\n                        justifyContent={\"space-evenly\"}>\r\n                        <Stack spacing={1} alignItems={\"center\"}>\r\n                            <IconButton>\r\n                                <Phone />\r\n                            </IconButton>\r\n                            <Typography variant=\"overline\"> Voice </Typography>\r\n                        </Stack>\r\n                        <Stack spacing={1} alignItems={\"center\"}>\r\n                            <IconButton>\r\n                                <VideoCamera />\r\n                            </IconButton>\r\n                            <Typography variant=\"overline\"> Video </Typography>\r\n                        </Stack>\r\n\r\n                    </Stack>\r\n                    <Divider />\r\n                    <Stack spacing={0.5}>\r\n                        <Typography variant=\"article\">About</Typography>\r\n                        <Typography variant=\"body2\">Imagination is the only limit </Typography>\r\n                    </Stack>\r\n                    <Divider />\r\n                    <Stack direction={\"row\"}\r\n                        alignItems={\"center\"}\r\n                        justifyContent={\"space-between\"}>\r\n                        <Typography variant=\"subtitle2\">Media, Links & Docs</Typography>\r\n                        <Button onClick={() => {\r\n                            dispatch(UpdateSidebarType(\"SHARED\"));\r\n                        }} endIcon={<CaretRight />}>\r\n                            401\r\n                        </Button>\r\n                    </Stack>\r\n                    <Stack direction={\"row\"}\r\n                        spacing={2}\r\n                        alignItems={\"center\"}>\r\n                        {[1, 2, 3].map((el) => (\r\n                            <Box>\r\n                                <img src={faker.image.food()} alt={faker.name.fullName()} />\r\n                            </Box>\r\n                        ))}\r\n                    </Stack>\r\n                    <Divider />\r\n                    <Stack direction={\"row\"}\r\n                        alignItems={\"center\"}\r\n                        justifyContent={\"space-between\"}>\r\n                        <Stack direction={\"row\"}\r\n                            alignItems={\"center\"} spacing={2}>\r\n                            <Star size={21} />\r\n                            <Typography variant=\"subtitle2\">Starred Messages</Typography>\r\n                        </Stack>\r\n                        <IconButton onClick={() => {\r\n                            dispatch(UpdateSidebarType(\"STARRED\"));\r\n                        }}>\r\n                            <CaretRight />\r\n                        </IconButton>\r\n                    </Stack>\r\n                    <Divider />\r\n                    <Stack direction={\"row\"}\r\n                        alignItems={\"center\"}\r\n                        justifyContent={\"space-between\"}>\r\n                        <Stack direction={\"row\"}\r\n                            alignItems={\"center\"} spacing={2}>\r\n                            <Bell size={21} />\r\n                            <Typography variant=\"subtitle2\">Mute Notifications</Typography>\r\n                        </Stack>\r\n                        <AntSwitch />\r\n                    </Stack>\r\n                    <Divider />\r\n                    <Typography> 1 group in common </Typography>\r\n                    <Stack direction={\"row\"} spacing={2}\r\n                        alignItems={\"center\"}>\r\n                        <Avatar src={faker.image.avatar()} alt={faker.name.fullName()} />\r\n                        <Stack spacing={0.5}>\r\n                            <Typography variant=\"subtitle2\"> Coding Monk </Typography>\r\n                            <Typography variant=\"caption\"> Owl, Parrot, Rabbit, You </Typography>\r\n                        </Stack>\r\n                    </Stack>\r\n                    <Stack direction={\"row\"}\r\n                        alignItems={\"center\"}\r\n                        spacing={2}>\r\n                        <Button onClick={() =>{\r\n                            setOpenBlock(true);\r\n                        }} \r\n                        startIcon={<Prohibit />} fullWidth variant=\"outlined\">\r\n                            Block\r\n                        </Button >\r\n                        <Button onClick={() =>{\r\n                            setOpenDelete(true);\r\n                        }} \r\n                        startIcon={<Trash />} fullWidth variant=\"outlined\">\r\n                            Delete\r\n                        </Button>\r\n                    </Stack>\r\n\r\n                </Stack>\r\n            </Stack>\r\n            {openBlock && <BlockDialog open={openBlock} handleClose={handleCloseBlock}/>}\r\n            {openDelete && <DeleteDialog open={openDelete} handleClose={handleCloseDelete}/>}\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Contact; \r\n","import React from \"react\";\r\nimport { Box, Stack, Typography, IconButton, Tabs, Tab, Grid } from '@mui/material';\r\nimport { CaretLeft } from 'phosphor-react';\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { useDispatch } from \"../redux/store\";\r\nimport { UpdateSidebarType } from \"../redux/slices/app\";\r\nimport { faker } from \"@faker-js/faker\";\r\nimport { SHARED_DOCS, SHARED_LINKS } from \"../data\";\r\nimport { DocMsg, LinkMsg } from \"./Conversation/MsgTypes\";\r\n\r\nconst SharedMessages = () => {\r\n    const theme = useTheme();\r\n    const dispatch = useDispatch();\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    return (\r\n        <Box sx={{ width: 320, height: \"100vh\" }}>\r\n            <Stack sx={{ height: \"100%\" }}>\r\n                {/* Header */}\r\n                <Box sx={{\r\n                    boxShadow: \"0px 0px 2px rgba(0, 0, 0, 0.25)\",\r\n                    width: \"100%\",\r\n                    backgroundColor: theme.palette.mode === \"light\" ? \"#F8FAFF\" : theme.palette.background,\r\n                }}>\r\n                    <Stack sx={{ height: \"100%\", p: 2 }} direction={\"row\"} alignItems={\"center\"} spacing={3}>\r\n                        <IconButton onClick={() => {\r\n                            dispatch(UpdateSidebarType(\"CONTACT\"));\r\n                        }}>\r\n                            <CaretLeft />\r\n                        </IconButton>\r\n                        <Typography variant=\"subtitle2\">\r\n                            Shared Messages\r\n                        </Typography>\r\n                    </Stack>\r\n                </Box>\r\n                <Tabs value={value} onChange={handleChange} centered>\r\n                    <Tab label=\"Media\" />\r\n                    <Tab label=\"Links\" />\r\n                    <Tab label=\"Docs\" />\r\n                </Tabs>\r\n                {/* Body */}\r\n                <Stack\r\n                    sx={{\r\n                        height: \"100%\",\r\n                        position: \"relative\",\r\n                        flexGrow: 1,\r\n                        overflowY: \"scroll\"\r\n                    }}\r\n                    p ={3}\r\n                    spacing={value === 1 ? 1 : 3}>\r\n                    {(() => {\r\n                        switch (value) {\r\n                            case 0:\r\n                                // Render images\r\n                                return (\r\n                                    <Grid container spacing={2}>\r\n                                        {[0, 1, 2, 3, 4, 5, 6].map((el) => (\r\n                                            <Grid item key={el} xs={4}>\r\n                                                <img src={faker.image.avatar()} alt={faker.name.fullName()} />\r\n                                            </Grid>\r\n                                        ))}\r\n                                    </Grid>\r\n                                );\r\n                            case 1:\r\n                                // Render link\r\n                                return SHARED_LINKS.map((el) => <LinkMsg el={el} />)\r\n\r\n                            case 2:\r\n                                // Render docs\r\n                                return SHARED_DOCS.map((el) => <DocMsg el={el} />)\r\n                            default:\r\n                                break;\r\n                        }\r\n                    })()}\r\n                </Stack>\r\n            </Stack>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default SharedMessages;\r\n","import React from \"react\";\r\nimport { Box, Stack, Typography, IconButton } from '@mui/material';\r\nimport { CaretLeft } from 'phosphor-react';\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { useDispatch } from \"../redux/store\";\r\nimport { UpdateSidebarType } from \"../redux/slices/app\";\r\nimport Message from \"./Conversation/Message\";\r\n\r\n\r\nconst StarredMessages = () => {\r\n    const theme = useTheme();\r\n    const dispatch = useDispatch();\r\n    const [ setValue] = React.useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    return (\r\n        <Box sx={{ width: 320, height: \"100vh\" }}>\r\n            <Stack sx={{ height: \"100%\" }}>\r\n                {/* Header */}\r\n                <Box sx={{\r\n                    boxShadow: \"0px 0px 2px rgba(0, 0, 0, 0.25)\",\r\n                    width: \"100%\",\r\n                    backgroundColor: theme.palette.mode === \"light\" ? \"#F8FAFF\" : theme.palette.background,\r\n                }}>\r\n                    <Stack sx={{ height: \"100%\", p: 2 }} direction={\"row\"} alignItems={\"center\"} spacing={3}>\r\n                        <IconButton onClick={() => {\r\n                            dispatch(UpdateSidebarType(\"CONTACT\"));\r\n                        }}>\r\n                            <CaretLeft />\r\n                        </IconButton>\r\n                        <Typography variant=\"subtitle2\">\r\n                            Starred Messages\r\n                        </Typography>\r\n                    </Stack>\r\n                </Box>\r\n                \r\n                {/* Body */}\r\n                <Stack\r\n                    sx={{\r\n                        height: \"100%\",\r\n                        position: \"relative\",\r\n                        flexGrow: 1,\r\n                        overflowY: \"scroll\"\r\n                    }}\r\n                    p ={3}\r\n                    spacing={3}>\r\n                        <Message/>\r\n                </Stack>\r\n            </Stack>\r\n        </Box>\r\n    ) ;\r\n}\r\n\r\nexport default StarredMessages;\r\n","import { Box, Stack } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport Chats from \"./Chats\";\r\nimport Conversation from \"../../components/Conversation\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport Contact from \"../../components/Contact\";\r\nimport { useSelector } from \"../../redux/store\";\r\nimport SharedMessages from \"../../components/SharedMessages\";\r\nimport StarredMessages from \"../../components/StarredMessages\";\r\n\r\n\r\nconst GeneralApp = () => {\r\n  const theme = useTheme();\r\n  const { sidebar } = useSelector((store) => store.app);\r\n\r\n  return (\r\n    <Stack direction={\"row\"} sx={{ width: \"100%\" }}>\r\n      {/* Chats */}\r\n\r\n      <Chats />\r\n\r\n      <Box\r\n        sx={{\r\n          height: \"100%\",\r\n          width: sidebar.open ? \"calc(100vw - 740px)\" : \"calc(100vw - 420px)\",\r\n          backgroundColor: theme.palette.mode === \"light\" ? \"#F0F4FA\"\r\n            : theme.palette.background.paper,\r\n        }}\r\n      >\r\n        {/* Conversation */}\r\n        <Conversation />\r\n      </Box>\r\n      {/* Contact */}\r\n      {sidebar.open && (() => {\r\n        switch (sidebar.type) {\r\n          case \"CONTACT\":\r\n            return <Contact />;\r\n\r\n          case \"STARRED\":\r\n            return <StarredMessages/> \r\n          case \"SHARED\":\r\n            return <SharedMessages />;\r\n          default:\r\n            break;\r\n        }\r\n      })()}\r\n\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default GeneralApp;\r\n"],"names":["StyledBadge","styled","Badge","_ref","theme","backgroundColor","color","boxShadow","concat","palette","background","paper","position","top","left","width","height","borderRadius","animation","border","content","transform","opacity","_ref2","id","name","img","msg","time","unread","online","useTheme","_jsx","Box","sx","mode","default","p","children","_jsxs","Stack","direction","alignItems","justifyContent","spacing","overlap","anchorOrigin","vertical","horizontal","variant","Avatar","src","faker","image","avatar","Typography","fontWeight","badgeContent","alpha","marginRight","marginLeft","padding","pointerEvents","display","InputBase","paddingLeft","Chats","IconButton","CircleDashed","Search","SearchIconWrapper","MagnifyingGlass","StyledInputBase","placeholder","ArchiveBox","size","Button","Divider","flexGrow","overflowY","SimpleBarStyle","timeout","clickOnTrack","ChatList","filter","el","pinned","map","ChatElement","Header","dispatch","useDispatch","onClick","ToggleSidebar","alt","fullName","VideoCamera","Phone","StyledInput","Input","fontSize","text","primary","Actions","icon","Image","y","title","Sticker","Camera","File","User","ChatInput","setOpenPicker","openActions","setOpenActions","React","fullWidth","disableUnderline","startAdornment","Tooltip","placement","Fab","InputAdornment","prev","LinkSimple","endAdornment","Smiley","Footer","openPicker","zIndex","bottom","right","Picker","data","onEmojiSelect","console","log","main","PaperPlaneTilt","DocMsg","menu","incoming","DownloadSimple","message","MessageOptions","LinkMsg","preview","style","maxHeight","component","Link","to","ReplyMsg","_ref3","MediaMsg","_ref4","maxWidth","TextMsg","_ref5","Timeline","_ref6","anchorEl","setAnchorEl","open","Boolean","_Fragment","DotsThreeVertical","undefined","event","currentTarget","Menu","onClose","handleClose","MenuListProps","px","Message_options","MenuItem","Chat_History","index","type","subtype","Conversation","Message","Transition","props","ref","Slide","BlockDialog","Dialog","TransitionComponent","keepMounted","DialogTitle","DialogContent","DialogContentText","DialogActions","DeleteDialog","Contact","openBlock","setOpenBlock","useState","openDelete","setOpenDelete","X","firstName","UpdateSidebarType","endIcon","CaretRight","food","Star","Bell","AntSwitch","startIcon","Prohibit","Trash","handleCloseBlock","handleCloseDelete","SharedMessages","value","setValue","CaretLeft","Tabs","onChange","handleChange","newValue","centered","Tab","label","Grid","container","item","xs","SHARED_LINKS","SHARED_DOCS","StarredMessages","GeneralApp","sidebar","useSelector","store","app"],"sourceRoot":""}