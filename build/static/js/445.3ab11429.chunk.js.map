{"version":3,"file":"static/js/445.3ab11429.chunk.js","mappings":"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","sources":["sections/auth/LoginForm.js","pages/auth/Login.js","../node_modules/phosphor-react/src/icons/GoogleLogo.tsx","../node_modules/phosphor-react/src/icons/GithubLogo.tsx","../node_modules/phosphor-react/src/icons/TwitterLogo.tsx","sections/auth/AuthSocial.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\n// form\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\n// @mui\r\nimport { \r\n    Link, \r\n    Stack, \r\n    Alert, \r\n    IconButton, \r\n    InputAdornment } from \"@mui/material\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport FormProvider from \"../../components/hook-form/FormProvider\";\r\nimport { Eye, EyeSlash } from \"phosphor-react\";\r\n// components\r\nimport { RHFTextField } from \"../../components/hook-form\";\r\nimport { LoginUser } from \"../../redux/slices/auth\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\n\r\nconst LoginForm = () => {\r\n    const dispatch = useDispatch();\r\n    const [showPassword, setShowPassword] = useState(false);\r\n   \r\n\r\n\r\n    const LoginSchema = Yup.object().shape({\r\n        email: Yup.string()\r\n            .required(\"Email is required\")\r\n            .email(\"Email must be a valid email address\"),\r\n        password: Yup.string().required(\"Password is required\"),\r\n    });\r\n\r\n    const defaultValues = {\r\n        email: \"demo@tawk.com\",\r\n        password: \"demo1234\",\r\n    };\r\n\r\n    const methods = useForm({\r\n        resolver: yupResolver(LoginSchema),\r\n        defaultValues,\r\n    });\r\n\r\n    const {\r\n        reset,\r\n        setError,\r\n        handleSubmit,\r\n        formState: { errors },\r\n    } = methods;\r\n\r\n    const onSubmit = async (data) => {\r\n        try {\r\n            //   console.log(data);\r\n            // submit data to backend\r\n               dispatch(LoginUser(data));\r\n        } catch (error) {\r\n            console.error(error);\r\n            reset();\r\n            setError(\"afterSubmit\", {\r\n                ...error,\r\n                message: error.message,\r\n            });\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <FormProvider\r\n            methods={methods}\r\n            onSubmit={handleSubmit(onSubmit)}>\r\n\r\n            <Stack spacing={3}>\r\n                {!!errors.afterSubmit && (\r\n                    <Alert severity=\"error\">{errors.afterSubmit.message}</Alert>\r\n                )}\r\n\r\n                <RHFTextField name=\"email\" label=\"Email address\" />\r\n                <RHFTextField\r\n                    name=\"password\"\r\n                    label=\"Password\"\r\n                    type={showPassword ? \"text\" : \"password\"}\r\n                    InputProps={{\r\n                        endAdornment: (\r\n                            <InputAdornment position=\"end\">\r\n                                <IconButton\r\n                                    onClick={() => {\r\n                                        setShowPassword(!showPassword);\r\n                                    }}\r\n                                >\r\n                                    {showPassword ? <Eye /> : <EyeSlash />}\r\n                                </IconButton>\r\n                            </InputAdornment>\r\n                        ),\r\n                    }}\r\n                />\r\n\r\n            </Stack>\r\n            <Stack alignItems=\"flex-end\" sx={{ my: 2 }}>\r\n                <Link component={RouterLink} to=\"/auth/reset-password\" variant=\"body2\" color=\"inherit\" underline=\"always\">\r\n                    Forgot password?\r\n                </Link>\r\n            </Stack>\r\n\r\n            <LoadingButton\r\n        fullWidth\r\n        color=\"inherit\"\r\n        size=\"large\"\r\n        type=\"submit\"\r\n        variant=\"contained\"\r\n        \r\n        sx={{\r\n          bgcolor: \"text.primary\",\r\n          color: (theme) =>\r\n            theme.palette.mode === \"light\" ? \"common.white\" : \"grey.800\",\r\n          \"&:hover\": {\r\n            bgcolor: \"text.primary\",\r\n            color: (theme) =>\r\n              theme.palette.mode === \"light\" ? \"common.white\" : \"grey.800\",\r\n          },\r\n        }}\r\n      >\r\n        Login\r\n      </LoadingButton>\r\n\r\n\r\n        </FormProvider>\r\n    );\r\n};\r\n\r\nexport default LoginForm; \r\n","import { Link as RouterLink } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport { Stack, Typography, Link } from \"@mui/material\"; // Import Link from @mui/material\r\nimport AuthSocial from \"../../sections/auth/AuthSocial\";\r\nimport LoginForm from \"../../sections/auth/LoginForm\";\r\n// import AuthSocial from \"../../sections/auth/AuthSocial\";\r\n\r\nconst Login = () => {\r\n    return (\r\n        <>\r\n            <Stack spacing={2} sx={{ mb: 5, position: \"relative\" }}>\r\n                <Typography variant=\"h4\">Login to Tawk</Typography>\r\n                <Stack direction=\"row\" spacing={0.5}>\r\n                    <Typography variant=\"body2\">New user?</Typography>\r\n\r\n                    <Link\r\n                        to={\"/auth/register\"}\r\n                        component={RouterLink}\r\n                        variant=\"subtitle2\"\r\n                    >\r\n                        Create an account\r\n                    </Link>\r\n                </Stack>\r\n\r\n            </Stack>\r\n            {/* Login Form */}\r\n            <LoginForm/>\r\n            {/* Auth Social */}\r\n            <AuthSocial/>\r\n           \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login;\r\n","/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <path\n      d=\"M128,128h88a88.1,88.1,0,1,1-25.8-62.2\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <path\n      d=\"M128,128h88a88.1,88.1,0,1,1-25.8-62.2\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M128,24A104,104,0,1,0,232,128,104.2,104.2,0,0,0,128,24Zm0,184A80,80,0,1,1,184.6,71.4a8,8,0,0,1,0,11.3,7.9,7.9,0,0,1-11.3,0A64.1,64.1,0,1,0,191.5,136H128a8,8,0,0,1,0-16h72a8,8,0,0,1,8,8A80.1,80.1,0,0,1,128,208Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <path\n      d=\"M128,128h88a88.1,88.1,0,1,1-25.8-62.2\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <path\n      d=\"M128,128h88a88.1,88.1,0,1,1-25.8-62.2\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <path\n      d=\"M128,128h88a88.1,88.1,0,1,1-25.8-62.2\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst GoogleLogo = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nGoogleLogo.displayName = \"GoogleLogo\";\n\nexport default GoogleLogo;\n","/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <path\n      d=\"M84,240a23.9,23.9,0,0,0,24-24V168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <path\n      d=\"M172,240a23.9,23.9,0,0,1-24-24V168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <path\n      d=\"M152,168h16a23.9,23.9,0,0,1,24,24v8a23.9,23.9,0,0,0,24,24\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <path\n      d=\"M104,168H88a23.9,23.9,0,0,0-24,24v8a23.9,23.9,0,0,1-24,24\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <path\n      d=\"M111.8,64A52,52,0,0,0,68,40a52,52,0,0,0-3.5,44.7A49.3,49.3,0,0,0,56,112v8a48,48,0,0,0,48,48h48a48,48,0,0,0,48-48v-8a49.3,49.3,0,0,0-8.5-27.3A52,52,0,0,0,188,40a52,52,0,0,0-43.8,24Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <path\n      d=\"M111.8,64A52,52,0,0,0,68,40a52,52,0,0,0-3.5,44.7A49.3,49.3,0,0,0,56,112v8a48,48,0,0,0,48,48h48a48,48,0,0,0,48-48v-8a49.3,49.3,0,0,0-8.5-27.3A52,52,0,0,0,188,40a52,52,0,0,0-43.8,24Z\"\n      opacity=\"0.2\"\n    />\n    <path\n      d=\"M84,240a23.9,23.9,0,0,0,24-24V168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M172,240a23.9,23.9,0,0,1-24-24V168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M152,168h16a23.9,23.9,0,0,1,24,24v8a23.9,23.9,0,0,0,24,24\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M104,168H88a23.9,23.9,0,0,0-24,24v8a23.9,23.9,0,0,1-24,24\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M111.8,64A52,52,0,0,0,68,40a52,52,0,0,0-3.5,44.7A49.3,49.3,0,0,0,56,112v8a48,48,0,0,0,48,48h48a48,48,0,0,0,48-48v-8a49.3,49.3,0,0,0-8.5-27.3A52,52,0,0,0,188,40a52,52,0,0,0-43.8,24Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M224,224a8,8,0,0,1-8,8,32.1,32.1,0,0,1-32-32v-8a16,16,0,0,0-16-16H156v40a16,16,0,0,0,16,16,8,8,0,0,1,0,16,32.1,32.1,0,0,1-32-32V176H116v40a32.1,32.1,0,0,1-32,32,8,8,0,0,1,0-16,16,16,0,0,0,16-16V176H88a16,16,0,0,0-16,16v8a32.1,32.1,0,0,1-32,32,8,8,0,0,1,0-16,16,16,0,0,0,16-16v-8a32.1,32.1,0,0,1,14.8-27A55.8,55.8,0,0,1,48,120v-8a58,58,0,0,1,7.7-28.3A59.9,59.9,0,0,1,61.1,36,7.8,7.8,0,0,1,68,32a59.7,59.7,0,0,1,48,24h24a59.7,59.7,0,0,1,48-24,7.8,7.8,0,0,1,6.9,4,59.9,59.9,0,0,1,5.4,47.7A58,58,0,0,1,208,112v8a55.8,55.8,0,0,1-22.8,45A32.1,32.1,0,0,1,200,192v8a16,16,0,0,0,16,16A8,8,0,0,1,224,224Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <path\n      d=\"M84,240a23.9,23.9,0,0,0,24-24V168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <path\n      d=\"M172,240a23.9,23.9,0,0,1-24-24V168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <path\n      d=\"M152,168h16a23.9,23.9,0,0,1,24,24v8a23.9,23.9,0,0,0,24,24\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <path\n      d=\"M104,168H88a23.9,23.9,0,0,0-24,24v8a23.9,23.9,0,0,1-24,24\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <path\n      d=\"M111.8,64A52,52,0,0,0,68,40a52,52,0,0,0-3.5,44.7A49.3,49.3,0,0,0,56,112v8a48,48,0,0,0,48,48h48a48,48,0,0,0,48-48v-8a49.3,49.3,0,0,0-8.5-27.3A52,52,0,0,0,188,40a52,52,0,0,0-43.8,24Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <path\n      d=\"M84,240a23.9,23.9,0,0,0,24-24V168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <path\n      d=\"M172,240a23.9,23.9,0,0,1-24-24V168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <path\n      d=\"M152,168h16a23.9,23.9,0,0,1,24,24v8a23.9,23.9,0,0,0,24,24\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <path\n      d=\"M104,168H88a23.9,23.9,0,0,0-24,24v8a23.9,23.9,0,0,1-24,24\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <path\n      d=\"M111.8,64A52,52,0,0,0,68,40a52,52,0,0,0-3.5,44.7A49.3,49.3,0,0,0,56,112v8a48,48,0,0,0,48,48h48a48,48,0,0,0,48-48v-8a49.3,49.3,0,0,0-8.5-27.3A52,52,0,0,0,188,40a52,52,0,0,0-43.8,24Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <path\n      d=\"M84,240a23.9,23.9,0,0,0,24-24V168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M172,240a23.9,23.9,0,0,1-24-24V168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M152,168h16a23.9,23.9,0,0,1,24,24v8a23.9,23.9,0,0,0,24,24\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M104,168H88a23.9,23.9,0,0,0-24,24v8a23.9,23.9,0,0,1-24,24\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M111.8,64A52,52,0,0,0,68,40a52,52,0,0,0-3.5,44.7A49.3,49.3,0,0,0,56,112v8a48,48,0,0,0,48,48h48a48,48,0,0,0,48-48v-8a49.3,49.3,0,0,0-8.5-27.3A52,52,0,0,0,188,40a52,52,0,0,0-43.8,24Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst GithubLogo = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nGithubLogo.displayName = \"GithubLogo\";\n\nexport default GithubLogo;\n","/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <path\n      d=\"M128,88c0-22,18.5-40.3,40.5-40a40,40,0,0,1,36.2,24H240l-32.3,32.3A127.9,127.9,0,0,1,80,224c-32,0-40-12-40-12s32-12,48-36c0,0-64-32-48-120,0,0,40,40,88,48Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <path\n      d=\"M128,88c0-22,18.5-40.3,40.5-40a40,40,0,0,1,36.2,24H240l-32.3,32.3A127.9,127.9,0,0,1,80,224c-32,0-40-12-40-12s32-12,48-36c0,0-64-32-48-120,0,0,40,40,88,48Z\"\n      opacity=\"0.2\"\n    />\n    <path\n      d=\"M128,88c0-22,18.5-40.3,40.5-40a40,40,0,0,1,36.2,24H240l-32.3,32.3A127.9,127.9,0,0,1,80,224c-32,0-40-12-40-12s32-12,48-36c0,0-64-32-48-120,0,0,40,40,88,48Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M245.7,77.7l-30.2,30.1C209.5,177.7,150.5,232,80,232c-14.5,0-26.5-2.3-35.6-6.8-7.3-3.7-10.3-7.6-11.1-8.8a8,8,0,0,1,3.9-11.9c.2-.1,23.8-9.1,39.1-26.4a108.6,108.6,0,0,1-24.7-24.4c-13.7-18.6-28.2-50.9-19.5-99.1a8.1,8.1,0,0,1,5.5-6.2,8,8,0,0,1,8.1,1.9c.3.4,33.6,33.2,74.3,43.8V88a48.3,48.3,0,0,1,48.6-48,48.2,48.2,0,0,1,41,24H240a8,8,0,0,1,7.4,4.9A8.4,8.4,0,0,1,245.7,77.7Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <path\n      d=\"M128,88c0-22,18.5-40.3,40.5-40a40,40,0,0,1,36.2,24H240l-32.3,32.3A127.9,127.9,0,0,1,80,224c-32,0-40-12-40-12s32-12,48-36c0,0-64-32-48-120,0,0,40,40,88,48Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <path\n      d=\"M128,88c0-22,18.5-40.3,40.5-40a40,40,0,0,1,36.2,24H240l-32.3,32.3A127.9,127.9,0,0,1,80,224c-32,0-40-12-40-12s32-12,48-36c0,0-64-32-48-120,0,0,40,40,88,48Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <path\n      d=\"M128,88c0-22,18.5-40.3,40.5-40a40,40,0,0,1,36.2,24H240l-32.3,32.3A127.9,127.9,0,0,1,80,224c-32,0-40-12-40-12s32-12,48-36c0,0-64-32-48-120,0,0,40,40,88,48Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst TwitterLogo = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nTwitterLogo.displayName = \"TwitterLogo\";\n\nexport default TwitterLogo;\n","import { Divider, IconButton, Stack } from '@mui/material';\r\nimport { LoadingButton } from \"@mui/lab\";\r\n\r\nimport { GoogleLogo, GithubLogo, TwitterLogo } from 'phosphor-react'; // Ensure correct import paths\r\nimport React from 'react';\r\n\r\nconst AuthSocial = () => {\r\n    return (\r\n        <div>\r\n            <Divider\r\n                sx={{\r\n                    my: 2.5,\r\n                    typography: 'overline',\r\n                    color: 'text.disabled',\r\n                    '&::before, ::after': {\r\n                        borderTopStyle: 'dashed',\r\n                    },\r\n                }}\r\n            >\r\n                OR\r\n            </Divider>\r\n            <Stack direction=\"row\" justifyContent=\"center\" spacing={2}>\r\n                <IconButton>\r\n                    <GoogleLogo color=\"#DF3E30\" />\r\n                </IconButton>\r\n\r\n                <IconButton color=\"inherit\" >\r\n                    <GithubLogo />\r\n                </IconButton>\r\n\r\n                <IconButton>\r\n                    <TwitterLogo color=\"#1C9CEA\" />\r\n                </IconButton>\r\n            </Stack>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AuthSocial;\r\n"],"names":["LoginForm","dispatch","useDispatch","showPassword","setShowPassword","useState","LoginSchema","Yup","shape","email","required","password","methods","useForm","resolver","yupResolver","defaultValues","reset","setError","handleSubmit","formState","errors","_jsxs","FormProvider","onSubmit","async","LoginUser","data","error","console","message","children","Stack","spacing","afterSubmit","_jsx","Alert","severity","RHFTextField","name","label","type","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","Eye","EyeSlash","alignItems","sx","my","Link","component","RouterLink","to","variant","color","underline","LoadingButton","fullWidth","size","bgcolor","theme","palette","mode","Login","_Fragment","mb","Typography","direction","AuthSocial","pathsByWeight","Map","set","React","d","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","renderPath","weight","renderPathForWeight","GoogleLogo","forwardRef","props","ref","IconBase","Object","assign","displayName","opacity","GithubLogo","TwitterLogo","Divider","typography","borderTopStyle","justifyContent"],"sourceRoot":""}