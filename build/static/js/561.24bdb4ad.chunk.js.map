{"version":3,"file":"static/js/561.24bdb4ad.chunk.js","mappings":"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","sources":["components/hook-form/FormProvider.js","components/hook-form/RHFTextField.js","sections/auth/RegisterForm.js","pages/auth/Register.js","../node_modules/phosphor-react/src/icons/GoogleLogo.tsx","../node_modules/phosphor-react/src/icons/GithubLogo.tsx","../node_modules/phosphor-react/src/icons/TwitterLogo.tsx","sections/auth/AuthSocial.js"],"sourcesContent":["/*\r\nimport PropTypes from 'prop-types';\r\n// form\r\nimport { FormProvider as Form } from 'react-hook-form';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nFormProvider.propTypes = {\r\n  children: PropTypes.node,\r\n  methods: PropTypes.object,\r\n  onSubmit: PropTypes.func,\r\n};\r\n\r\nexport default function FormProvider({ children, onSubmit, methods }) {\r\n  return (\r\n    <Form {...methods}>\r\n      <form onSubmit={onSubmit}>{children}</form>\r\n    </Form>\r\n  );\r\n}\r\n*/\r\n\r\nimport React from \"react\";\r\nimport { FormProvider as Form } from 'react-hook-form';\r\n\r\nconst FormProvider = ({ children, onSubmit, methods }) => {\r\n  return (\r\n    <Form {...methods}>\r\n      <form onSubmit={onSubmit}>{children}</form>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default FormProvider;","import PropTypes from 'prop-types';\r\n// form\r\nimport { useFormContext, Controller } from 'react-hook-form';\r\n// @mui\r\nimport { TextField } from '@mui/material';\r\n\r\nRHFTextField.propTypes = {\r\n    name: PropTypes.string,\r\n    helperText: PropTypes.node,\r\n  };\r\n\r\nexport default function RHFTextField({ name, helperText, ...other }) {\r\n    const { control } = useFormContext();\r\n\r\n    return (\r\n        <Controller\r\n            name={name}\r\n            control={control}\r\n            render={({ field, fieldState: { error } }) => (\r\n                < TextField\r\n                    {...field}\r\n                    fullWidth\r\n\r\n                    value={typeof field.value === 'number' && field.value === 0 ? '' : field.value}\r\n                    error={!!error}\r\n                    helperText={error ? error?.message : helperText}\r\n                    {...other}\r\n                />\r\n            )}\r\n            />\r\n\r\n            );\r\n  }","import React, { useState } from \"react\";\r\nimport * as Yup from 'yup';\r\nimport { useForm } from \"react-hook-form\";\r\n// components\r\nimport FormProvider, { RHFTextField } from \"../../components/hook-form\";\r\nimport { Eye, EyeSlash } from \"phosphor-react\";\r\n\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\n// @mui\r\nimport { Link, Stack, Button, Alert, IconButton, InputAdornment } from \"@mui/material\";\r\n \r\n\r\n\r\nconst RegisterForm = () => {\r\n    const [showPassword, setShowPassword] = useState(false);\r\n\r\n    const RegisterSchema = Yup.object().shape({\r\n        firstName: Yup.string().required(\"First Name is required\"),\r\n        lastName: Yup.string().required(\"Last Name is required\"),\r\n        email: Yup.string()\r\n            .required(\"Email is required\")\r\n            .email(\"Email must be a valid email address\"),\r\n        password: Yup.string().required(\"Password is required\"),\r\n    });\r\n\r\n    const defaultValues = {\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"demo@tawk.com\",\r\n        password: \"demo1234\",\r\n    };\r\n\r\n    const methods = useForm({\r\n        resolver: yupResolver(RegisterSchema),\r\n        defaultValues,\r\n    });\r\n\r\n    const {\r\n        reset,\r\n        setError,\r\n        handleSubmit,\r\n        formState: { errors, isSubmitting, isSubmitSuccessful },\r\n    } = methods;\r\n\r\n    const onSubmit = async (data) => {\r\n        try {\r\n            //   console.log(data);\r\n            // submit data to backend\r\n            //   dispatch(LoginUser(data));\r\n        } catch (error) {\r\n            console.error(error);\r\n            reset();\r\n            setError(\"afterSubmit\", {\r\n                ...error,\r\n                message: error.message,\r\n            });\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <FormProvider methods={methods}\r\n            onSubmit={handleSubmit(onSubmit)}>\r\n            <Stack spacing={3} mb={4}>\r\n                {!!errors.afterSubmit && (\r\n                    <Alert severity=\"error\">{errors.afterSubmit.message}</Alert>\r\n                )}\r\n                <Stack direction={{ xs: \"column\", sm: \"row\" }} spacing={2}>\r\n                    <RHFTextField name=\"firstName\" label=\"First name\" />\r\n                    <RHFTextField name=\"lastName\" label=\"Last name\" />\r\n                </Stack>\r\n                <RHFTextField name=\"email\" label=\"Email address\" />\r\n                <RHFTextField\r\n                    name=\"password\"\r\n                    label=\"Password\"\r\n                    type={showPassword ? \"text\" : \"password\"}\r\n                    InputProps={{\r\n                        endAdornment: (\r\n                            <InputAdornment position=\"end\">\r\n                                <IconButton\r\n                                    onClick={() => setShowPassword(!showPassword)}\r\n                                    edge=\"end\"\r\n                                >\r\n                                    {showPassword ? <Eye /> : <EyeSlash />}\r\n                                </IconButton>\r\n                            </InputAdornment>\r\n                        ),\r\n                    }}\r\n                />\r\n\r\n            </Stack>\r\n\r\n            <Button\r\n                fullWidth\r\n                color=\"inherit\"\r\n                size=\"large\"\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n               \r\n                sx={{\r\n                    bgcolor: \"text.primary\",\r\n                    color: (theme) =>\r\n                        theme.palette.mode === \"light\" ? \"common.white\" : \"grey.800\",\r\n                    \"&:hover\": {\r\n                        bgcolor: \"text.primary\",\r\n                        color: (theme) =>\r\n                            theme.palette.mode === \"light\" ? \"common.white\" : \"grey.800\",\r\n                    },\r\n                }}\r\n            >\r\n                Create Account\r\n            </Button>\r\n\r\n        </FormProvider>\r\n    )\r\n}\r\nexport default RegisterForm;","import { Typography, Stack, Link } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport RegisterForm from \"../../sections/auth/RegisterForm\";\r\nimport AuthSocial from \"../../sections/auth/AuthSocial\";\r\n\r\nconst Register = () => {\r\n    return (\r\n\r\n        <Stack spacing={2} sx={{ mb: 5, position: \"relative\" }}>\r\n            <Typography variant=\"h4\">\r\n                Get Started With Tawk\r\n            </Typography>\r\n            <Stack direction={\"row\"} spacing={0.5}>\r\n                <Typography variant=\"body2\">Already have an account?</Typography>\r\n                <Link component={RouterLink} to=\"/auth/login\" variant=\"subtitle2\">\r\n                    Sign in\r\n                </Link>\r\n            </Stack>\r\n            {/* REgister form  */}\r\n            <RegisterForm/>\r\n            <Typography\r\n                component=\"div\"\r\n                sx={{ color: 'text.secondary', mt: 3, typography: 'caption', textAlign: 'center' }}\r\n            >\r\n                {'By signing up, I agree to '}\r\n                <Link underline=\"always\" color=\"text.primary\">\r\n                    Terms of Service\r\n                </Link>\r\n                {' and '}\r\n                <Link underline=\"always\" color=\"text.primary\">\r\n                    Privacy Policy\r\n                </Link>\r\n            </Typography>\r\n            <AuthSocial/>\r\n\r\n        </Stack>\r\n\r\n    )\r\n}\r\n\r\nexport default Register;\r\n","/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <path\n      d=\"M128,128h88a88.1,88.1,0,1,1-25.8-62.2\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <path\n      d=\"M128,128h88a88.1,88.1,0,1,1-25.8-62.2\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M128,24A104,104,0,1,0,232,128,104.2,104.2,0,0,0,128,24Zm0,184A80,80,0,1,1,184.6,71.4a8,8,0,0,1,0,11.3,7.9,7.9,0,0,1-11.3,0A64.1,64.1,0,1,0,191.5,136H128a8,8,0,0,1,0-16h72a8,8,0,0,1,8,8A80.1,80.1,0,0,1,128,208Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <path\n      d=\"M128,128h88a88.1,88.1,0,1,1-25.8-62.2\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <path\n      d=\"M128,128h88a88.1,88.1,0,1,1-25.8-62.2\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <path\n      d=\"M128,128h88a88.1,88.1,0,1,1-25.8-62.2\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst GoogleLogo = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nGoogleLogo.displayName = \"GoogleLogo\";\n\nexport default GoogleLogo;\n","/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <path\n      d=\"M84,240a23.9,23.9,0,0,0,24-24V168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <path\n      d=\"M172,240a23.9,23.9,0,0,1-24-24V168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <path\n      d=\"M152,168h16a23.9,23.9,0,0,1,24,24v8a23.9,23.9,0,0,0,24,24\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <path\n      d=\"M104,168H88a23.9,23.9,0,0,0-24,24v8a23.9,23.9,0,0,1-24,24\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <path\n      d=\"M111.8,64A52,52,0,0,0,68,40a52,52,0,0,0-3.5,44.7A49.3,49.3,0,0,0,56,112v8a48,48,0,0,0,48,48h48a48,48,0,0,0,48-48v-8a49.3,49.3,0,0,0-8.5-27.3A52,52,0,0,0,188,40a52,52,0,0,0-43.8,24Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <path\n      d=\"M111.8,64A52,52,0,0,0,68,40a52,52,0,0,0-3.5,44.7A49.3,49.3,0,0,0,56,112v8a48,48,0,0,0,48,48h48a48,48,0,0,0,48-48v-8a49.3,49.3,0,0,0-8.5-27.3A52,52,0,0,0,188,40a52,52,0,0,0-43.8,24Z\"\n      opacity=\"0.2\"\n    />\n    <path\n      d=\"M84,240a23.9,23.9,0,0,0,24-24V168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M172,240a23.9,23.9,0,0,1-24-24V168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M152,168h16a23.9,23.9,0,0,1,24,24v8a23.9,23.9,0,0,0,24,24\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M104,168H88a23.9,23.9,0,0,0-24,24v8a23.9,23.9,0,0,1-24,24\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M111.8,64A52,52,0,0,0,68,40a52,52,0,0,0-3.5,44.7A49.3,49.3,0,0,0,56,112v8a48,48,0,0,0,48,48h48a48,48,0,0,0,48-48v-8a49.3,49.3,0,0,0-8.5-27.3A52,52,0,0,0,188,40a52,52,0,0,0-43.8,24Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M224,224a8,8,0,0,1-8,8,32.1,32.1,0,0,1-32-32v-8a16,16,0,0,0-16-16H156v40a16,16,0,0,0,16,16,8,8,0,0,1,0,16,32.1,32.1,0,0,1-32-32V176H116v40a32.1,32.1,0,0,1-32,32,8,8,0,0,1,0-16,16,16,0,0,0,16-16V176H88a16,16,0,0,0-16,16v8a32.1,32.1,0,0,1-32,32,8,8,0,0,1,0-16,16,16,0,0,0,16-16v-8a32.1,32.1,0,0,1,14.8-27A55.8,55.8,0,0,1,48,120v-8a58,58,0,0,1,7.7-28.3A59.9,59.9,0,0,1,61.1,36,7.8,7.8,0,0,1,68,32a59.7,59.7,0,0,1,48,24h24a59.7,59.7,0,0,1,48-24,7.8,7.8,0,0,1,6.9,4,59.9,59.9,0,0,1,5.4,47.7A58,58,0,0,1,208,112v8a55.8,55.8,0,0,1-22.8,45A32.1,32.1,0,0,1,200,192v8a16,16,0,0,0,16,16A8,8,0,0,1,224,224Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <path\n      d=\"M84,240a23.9,23.9,0,0,0,24-24V168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <path\n      d=\"M172,240a23.9,23.9,0,0,1-24-24V168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <path\n      d=\"M152,168h16a23.9,23.9,0,0,1,24,24v8a23.9,23.9,0,0,0,24,24\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <path\n      d=\"M104,168H88a23.9,23.9,0,0,0-24,24v8a23.9,23.9,0,0,1-24,24\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <path\n      d=\"M111.8,64A52,52,0,0,0,68,40a52,52,0,0,0-3.5,44.7A49.3,49.3,0,0,0,56,112v8a48,48,0,0,0,48,48h48a48,48,0,0,0,48-48v-8a49.3,49.3,0,0,0-8.5-27.3A52,52,0,0,0,188,40a52,52,0,0,0-43.8,24Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <path\n      d=\"M84,240a23.9,23.9,0,0,0,24-24V168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <path\n      d=\"M172,240a23.9,23.9,0,0,1-24-24V168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <path\n      d=\"M152,168h16a23.9,23.9,0,0,1,24,24v8a23.9,23.9,0,0,0,24,24\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <path\n      d=\"M104,168H88a23.9,23.9,0,0,0-24,24v8a23.9,23.9,0,0,1-24,24\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <path\n      d=\"M111.8,64A52,52,0,0,0,68,40a52,52,0,0,0-3.5,44.7A49.3,49.3,0,0,0,56,112v8a48,48,0,0,0,48,48h48a48,48,0,0,0,48-48v-8a49.3,49.3,0,0,0-8.5-27.3A52,52,0,0,0,188,40a52,52,0,0,0-43.8,24Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <path\n      d=\"M84,240a23.9,23.9,0,0,0,24-24V168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M172,240a23.9,23.9,0,0,1-24-24V168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M152,168h16a23.9,23.9,0,0,1,24,24v8a23.9,23.9,0,0,0,24,24\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M104,168H88a23.9,23.9,0,0,0-24,24v8a23.9,23.9,0,0,1-24,24\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M111.8,64A52,52,0,0,0,68,40a52,52,0,0,0-3.5,44.7A49.3,49.3,0,0,0,56,112v8a48,48,0,0,0,48,48h48a48,48,0,0,0,48-48v-8a49.3,49.3,0,0,0-8.5-27.3A52,52,0,0,0,188,40a52,52,0,0,0-43.8,24Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst GithubLogo = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nGithubLogo.displayName = \"GithubLogo\";\n\nexport default GithubLogo;\n","/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <path\n      d=\"M128,88c0-22,18.5-40.3,40.5-40a40,40,0,0,1,36.2,24H240l-32.3,32.3A127.9,127.9,0,0,1,80,224c-32,0-40-12-40-12s32-12,48-36c0,0-64-32-48-120,0,0,40,40,88,48Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <path\n      d=\"M128,88c0-22,18.5-40.3,40.5-40a40,40,0,0,1,36.2,24H240l-32.3,32.3A127.9,127.9,0,0,1,80,224c-32,0-40-12-40-12s32-12,48-36c0,0-64-32-48-120,0,0,40,40,88,48Z\"\n      opacity=\"0.2\"\n    />\n    <path\n      d=\"M128,88c0-22,18.5-40.3,40.5-40a40,40,0,0,1,36.2,24H240l-32.3,32.3A127.9,127.9,0,0,1,80,224c-32,0-40-12-40-12s32-12,48-36c0,0-64-32-48-120,0,0,40,40,88,48Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M245.7,77.7l-30.2,30.1C209.5,177.7,150.5,232,80,232c-14.5,0-26.5-2.3-35.6-6.8-7.3-3.7-10.3-7.6-11.1-8.8a8,8,0,0,1,3.9-11.9c.2-.1,23.8-9.1,39.1-26.4a108.6,108.6,0,0,1-24.7-24.4c-13.7-18.6-28.2-50.9-19.5-99.1a8.1,8.1,0,0,1,5.5-6.2,8,8,0,0,1,8.1,1.9c.3.4,33.6,33.2,74.3,43.8V88a48.3,48.3,0,0,1,48.6-48,48.2,48.2,0,0,1,41,24H240a8,8,0,0,1,7.4,4.9A8.4,8.4,0,0,1,245.7,77.7Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <path\n      d=\"M128,88c0-22,18.5-40.3,40.5-40a40,40,0,0,1,36.2,24H240l-32.3,32.3A127.9,127.9,0,0,1,80,224c-32,0-40-12-40-12s32-12,48-36c0,0-64-32-48-120,0,0,40,40,88,48Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <path\n      d=\"M128,88c0-22,18.5-40.3,40.5-40a40,40,0,0,1,36.2,24H240l-32.3,32.3A127.9,127.9,0,0,1,80,224c-32,0-40-12-40-12s32-12,48-36c0,0-64-32-48-120,0,0,40,40,88,48Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <path\n      d=\"M128,88c0-22,18.5-40.3,40.5-40a40,40,0,0,1,36.2,24H240l-32.3,32.3A127.9,127.9,0,0,1,80,224c-32,0-40-12-40-12s32-12,48-36c0,0-64-32-48-120,0,0,40,40,88,48Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst TwitterLogo = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nTwitterLogo.displayName = \"TwitterLogo\";\n\nexport default TwitterLogo;\n","import { Divider, IconButton, Stack } from '@mui/material';\r\nimport { LoadingButton } from \"@mui/lab\";\r\n\r\nimport { GoogleLogo, GithubLogo, TwitterLogo } from 'phosphor-react'; // Ensure correct import paths\r\nimport React from 'react';\r\n\r\nconst AuthSocial = () => {\r\n    return (\r\n        <div>\r\n            <Divider\r\n                sx={{\r\n                    my: 2.5,\r\n                    typography: 'overline',\r\n                    color: 'text.disabled',\r\n                    '&::before, ::after': {\r\n                        borderTopStyle: 'dashed',\r\n                    },\r\n                }}\r\n            >\r\n                OR\r\n            </Divider>\r\n            <Stack direction=\"row\" justifyContent=\"center\" spacing={2}>\r\n                <IconButton>\r\n                    <GoogleLogo color=\"#DF3E30\" />\r\n                </IconButton>\r\n\r\n                <IconButton color=\"inherit\" >\r\n                    <GithubLogo />\r\n                </IconButton>\r\n\r\n                <IconButton>\r\n                    <TwitterLogo color=\"#1C9CEA\" />\r\n                </IconButton>\r\n            </Stack>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AuthSocial;\r\n"],"names":["_ref","children","onSubmit","methods","_jsx","Form","RHFTextField","name","helperText","other","control","useFormContext","Controller","render","_ref2","field","fieldState","error","TextField","fullWidth","value","message","RegisterForm","showPassword","setShowPassword","useState","RegisterSchema","Yup","shape","firstName","required","lastName","email","password","useForm","resolver","yupResolver","defaultValues","reset","setError","handleSubmit","formState","errors","isSubmitting","isSubmitSuccessful","_jsxs","FormProvider","async","Stack","spacing","mb","afterSubmit","Alert","severity","direction","xs","sm","label","type","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","edge","Eye","EyeSlash","Button","color","size","variant","sx","bgcolor","theme","palette","mode","Register","Typography","Link","component","RouterLink","to","mt","typography","textAlign","underline","AuthSocial","pathsByWeight","Map","set","React","d","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","renderPath","weight","renderPathForWeight","GoogleLogo","forwardRef","props","ref","IconBase","Object","assign","displayName","opacity","GithubLogo","TwitterLogo","Divider","my","borderTopStyle","justifyContent"],"sourceRoot":""}