{"version":3,"file":"static/js/778.71ff45a8.chunk.js","mappings":"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","sources":["components/Search/Search.js","components/Search/SearchIconWrapper.js","components/Search/StyledInputBase.js","../node_modules/phosphor-react/src/icons/ArrowDownLeft.tsx","../node_modules/phosphor-react/src/icons/ArrowUpRight.tsx","components/CallElement.js","sections/main/StartCall.js","pages/dashboard/Call.js","../node_modules/phosphor-react/src/icons/Plus.tsx","../node_modules/phosphor-react/src/icons/VideoCamera.tsx"],"sourcesContent":["import {styled, alpha} from \"@mui/material/styles\";\r\n\r\nconst Search = styled(\"div\")(({ theme }) => ({\r\n    position: \"relative\",\r\n    borderRadius: 20,\r\n    backgroundColor: alpha(theme.palette.background.default, 1),\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: \"100%\"\r\n}));\r\n\r\nexport default Search;","import {styled} from \"@mui/material/styles\";\r\n\r\nconst SearchIconWrapper = styled(\"div\")(({ theme }) => ({\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n}));\r\n\r\nexport default SearchIconWrapper;","import InputBase from \"@mui/material/InputBase\";\r\nimport {styled} from \"@mui/material/styles\";\r\n\r\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n    color: \"inherit\",\r\n    \"& .MuiInputBase-input\": {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n        width: \"100%\",\r\n    }\r\n}));\r\n\r\nexport default StyledInputBase;","/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <line\n      x1=\"192\"\n      y1=\"64\"\n      x2=\"64\"\n      y2=\"192\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <polyline\n      points=\"168 192 64 192 64 88\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <line\n      x1=\"192\"\n      y1=\"64\"\n      x2=\"64\"\n      y2=\"192\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <polyline\n      points=\"168 192 64 192 64 88\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M197.7,69.7,127.3,140l46.4,46.3a8.4,8.4,0,0,1,1.7,8.8A8,8,0,0,1,168,200H64a8,8,0,0,1-8-8V88a8,8,0,0,1,4.9-7.4,8.4,8.4,0,0,1,8.8,1.7L116,128.7l70.3-70.4a8.1,8.1,0,0,1,11.4,11.4Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <line\n      x1=\"192\"\n      y1=\"64\"\n      x2=\"64\"\n      y2=\"192\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <polyline\n      points=\"168 192 64 192 64 88\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <line\n      x1=\"192\"\n      y1=\"64\"\n      x2=\"64\"\n      y2=\"192\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <polyline\n      points=\"168 192 64 192 64 88\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <line\n      x1=\"192\"\n      y1=\"64\"\n      x2=\"64\"\n      y2=\"192\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <polyline\n      points=\"168 192 64 192 64 88\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst ArrowDownLeft = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nArrowDownLeft.displayName = \"ArrowDownLeft\";\n\nexport default ArrowDownLeft;\n","/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <line\n      x1=\"64\"\n      y1=\"192\"\n      x2=\"192\"\n      y2=\"64\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <polyline\n      points=\"88 64 192 64 192 168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <line\n      x1=\"64\"\n      y1=\"192\"\n      x2=\"192\"\n      y2=\"64\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <polyline\n      points=\"88 64 192 64 192 168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M200,64V168a8,8,0,0,1-4.9,7.4,8.5,8.5,0,0,1-3.1.6,8.3,8.3,0,0,1-5.7-2.3L140,127.3,69.7,197.7a8.2,8.2,0,0,1-11.4,0,8.1,8.1,0,0,1,0-11.4L128.7,116,82.3,69.7a8.4,8.4,0,0,1-1.7-8.8A8,8,0,0,1,88,56H192A8,8,0,0,1,200,64Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <line\n      x1=\"64\"\n      y1=\"192\"\n      x2=\"192\"\n      y2=\"64\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <polyline\n      points=\"88 64 192 64 192 168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <line\n      x1=\"64\"\n      y1=\"192\"\n      x2=\"192\"\n      y2=\"64\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <polyline\n      points=\"88 64 192 64 192 168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <line\n      x1=\"64\"\n      y1=\"192\"\n      x2=\"192\"\n      y2=\"64\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <polyline\n      points=\"88 64 192 64 192 168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst ArrowUpRight = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nArrowUpRight.displayName = \"ArrowUpRight\";\n\nexport default ArrowUpRight;\n","import { faker } from \"@faker-js/faker\";\r\nimport { Avatar, Box, Stack, styled, Badge, Typography, IconButton } from \"@mui/material\";\r\nimport { ArrowDownLeft, ArrowUpRight, Phone, VideoCamera } from \"phosphor-react\";\r\nimport React from \"react\";\r\n\r\nconst StyledBadge = styled(Badge)(({ theme }) => ({\r\n    \"& .MuiBadge-badge\": {\r\n        backgroundColor: \"#44b700\",\r\n        color: \"#44b700\",\r\n        boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n        \"&::after\": {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            borderRadius: \"50%\",\r\n            animation: \"ripple 1.2s infinite ease-in-out\",\r\n            border: \"1px solid currentColor\",\r\n            content: '\"\"',\r\n        },\r\n    },\r\n    \"@keyframes ripple\": {\r\n        \"0%\": {\r\n            transform: \"scale(.8)\",\r\n            opacity: 1,\r\n        },\r\n        \"100%\": {\r\n            transform: \"scale(2.4)\",\r\n            opacity: 0,\r\n        },\r\n    },\r\n}));\r\n\r\nconst CallLogElement = ({ online, incoming, missed }) => {\r\n    return (\r\n        <Box\r\n            sx={{\r\n                width: \"100%\",\r\n                borderRadius: 1,\r\n                backgroundColor: (theme) =>\r\n                    theme.palette.mode === \"light\"\r\n                        ? \"#fff\"\r\n                        : theme.palette.background.default,\r\n            }}\r\n            p={2}\r\n        >\r\n            <Stack\r\n                direction=\"row\"\r\n                alignItems={\"center\"}\r\n                justifyContent=\"space-between\"\r\n            >\r\n\r\n                <Stack spacing={2} direction={\"row\"} alignItems={\"center\"}>\r\n                    {online ? (\r\n                        <StyledBadge\r\n                            overlap=\"circular\"\r\n                            anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\r\n                            variant=\"dot\"\r\n                        >\r\n                            <Avatar src={faker.image.avatar()} alt={faker.name.fullName()} />\r\n                        </StyledBadge>)\r\n                        : (\r\n                            <Avatar src={faker.image.avatar()} alt={faker.name.fullName()} />\r\n                        )}\r\n\r\n                    <Stack spacing={0.3}>\r\n                        <Typography variant='subtitle2'>\r\n                            {faker.name.fullName()}\r\n                        </Typography>\r\n                        {/* <Typography variant='caption'>\r\n                        {msg}\r\n                    </Typography> */}\r\n\r\n                        <Stack spacing={1} alignItems=\"center\" direction={\"row\"}>\r\n                            {incoming ? (\r\n                                <ArrowDownLeft color={missed ? \"red\" : \"green\"} />\r\n                            ) : (\r\n                                <ArrowUpRight color={missed ? \"red\" : \"green\"} />\r\n                            )}\r\n                            <Typography variant=\"caption\">Yesterday 21:24\r\n                            </Typography>\r\n                        </Stack>\r\n                    </Stack>\r\n                    <IconButton >\r\n                        <Phone color=\"green\" />\r\n                    </IconButton>\r\n\r\n                </Stack>\r\n            </Stack>\r\n        </Box>\r\n    )\r\n}\r\n\r\nconst CallElement = ({ online }) => {\r\n    return (\r\n        <Box\r\n            sx={{\r\n                width: \"100%\",\r\n                borderRadius: 1,\r\n                backgroundColor: (theme) =>\r\n                    theme.palette.mode === \"light\"\r\n                        ? \"#fff\"\r\n                        : theme.palette.background.default,\r\n            }}\r\n            p={2}\r\n        >\r\n            <Stack\r\n                direction=\"row\"\r\n                alignItems={\"center\"}\r\n                justifyContent=\"space-between\"\r\n            >\r\n\r\n                <Stack spacing={2} direction={\"row\"} alignItems={\"center\"}>\r\n                    {online ? (\r\n                        <StyledBadge\r\n                            overlap=\"circular\"\r\n                            anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\r\n                            variant=\"dot\"\r\n                        >\r\n                            <Avatar src={faker.image.avatar()} alt={faker.name.fullName()} />\r\n                        </StyledBadge>)\r\n                        : (\r\n                            <Avatar src={faker.image.avatar()} alt={faker.name.fullName()} />\r\n                        )}\r\n\r\n                    <Stack spacing={0.3}>\r\n                        <Typography variant='subtitle2'>\r\n                            {faker.name.fullName()}\r\n                        </Typography>\r\n                        {/* <Typography variant='caption'>\r\n                    {msg}\r\n                </Typography> */}\r\n                    </Stack>\r\n\r\n                    <Stack direction={\"row\"} alignItems={\"center\"}>\r\n                        <IconButton >\r\n                            <Phone color=\"green\" />\r\n\r\n                        </IconButton>\r\n                        <IconButton>\r\n                            <VideoCamera color=\"green\" />\r\n                        </IconButton>\r\n\r\n                    </Stack>\r\n\r\n                </Stack>\r\n            </Stack>\r\n        </Box>\r\n    )\r\n}\r\nexport { CallElement, CallLogElement };\r\n","import {\r\n    Dialog,\r\n    DialogContent,\r\n    DialogTitle,\r\n    Slide,\r\n    Stack\r\n} from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { CallElement } from \"../../components/CallElement\";\r\nimport { Search, SearchIconWrapper, StyledInputBase } from \"../../components/Search\";\r\nimport { MagnifyingGlass } from \"phosphor-react\";\r\nimport { MembersList } from \"../../data\";\r\n\r\n// Transition component\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst StartCall = ({ open, handleClose, list }) => { // Receive 'list' as a prop\r\n    return (\r\n        <Dialog\r\n            fullWidth\r\n            maxWidth=\"xs\"\r\n            open={open}\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n            onClose={handleClose}\r\n        >\r\n            <DialogTitle>Start Call</DialogTitle>\r\n            <DialogContent>\r\n                <Stack spacing={3}>\r\n                    <Stack sx={{ width: \"100%\" }}>\r\n                        <Search>\r\n                            <SearchIconWrapper>\r\n                                <MagnifyingGlass color=\"#709CE6\" />\r\n                            </SearchIconWrapper>\r\n                            <StyledInputBase\r\n                                placeholder=\"Search…\"\r\n                                inputProps={{ \"aria-label\": \"search\" }}\r\n                            />\r\n                        </Search>\r\n                    </Stack>\r\n                    {/*  Call */}\r\n                    {MembersList.map((el) => {\r\n                        return <CallElement {...el} />;\r\n                    })}\r\n                    <CallElement />\r\n                </Stack>\r\n\r\n\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default StartCall;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n    Box,\r\n    Stack,\r\n    Typography,\r\n    Link,\r\n    IconButton,\r\n    Divider,\r\n}\r\n    from \"@mui/material\";\r\n\r\nimport {\r\n    Search,\r\n    SearchIconWrapper,\r\n    StyledInputBase\r\n}\r\n    from \"../../components/Search\";\r\nimport { MagnifyingGlass, Plus } from \"phosphor-react\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { SimpleBarStyle } from \"../../components/Scrollbar\";\r\nimport { CallLogElement } from \"../../components/CallElement\";\r\nimport { CallLogs } from \"../../data\";\r\nimport StartCall from \"../../sections/main/StartCall\";\r\n\r\nconst Call = () => {\r\n\r\n    const theme = useTheme();\r\n\r\n    const [openDialog, setOpenDialog] = useState(false);\r\n\r\n    const handleCloseDialog = () => {\r\n        setOpenDialog(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Stack direction=\"row\" sx={{ width: \"100%\" }}>\r\n                {/* Left */}\r\n                <Box sx={{\r\n                    overflowY: \"hidden\", // Changed overflowY to \"hidden\"\r\n\r\n                    height: \"100vh\",\r\n                    width: 320,\r\n                    backgroundColor: (theme) =>\r\n                        theme.palette.mode === \"light\"\r\n                            ? \"#F8FAFF\"\r\n                            : theme.palette.background,\r\n\r\n                    boxShadow: \"0px 0px 2px rgba(0, 0, 0, 0.25)\",\r\n                }}>\r\n                    <Stack p={3} spacing={2} sx={{ maxHeight: \"100vh\" }}>\r\n                        <Stack\r\n                            alignItems={\"center\"}\r\n                            justifyContent=\"space-between\"\r\n                            direction=\"row\"\r\n                        >\r\n                            <Typography variant=\"h5\">Call Logs</Typography>\r\n                        </Stack>\r\n                        {/* Search */}\r\n                        <Stack sx={{ width: \"100%\" }}>\r\n                            <Search>\r\n                                <SearchIconWrapper>\r\n                                    <MagnifyingGlass color=\"#709CE6\" />\r\n                                </SearchIconWrapper>\r\n                                <StyledInputBase\r\n                                    placeholder=\"Search…\"\r\n                                    inputProps={{ \"aria-label\": \"search\" }}\r\n                                />\r\n                            </Search>\r\n                        </Stack>\r\n                        <Stack justifyContent={\"space-between\"}\r\n                            alignItems={\"center\"}\r\n                            direction={\"row\"}>\r\n                            <Typography variant=\"subtitle2\" sx={{}} component={Link}>\r\n                                Start Coversation\r\n                            </Typography>\r\n                            <IconButton onClick={() => {\r\n                                setOpenDialog(true);\r\n                            }}>\r\n                                <Plus style={{ color: theme.palette.primary.main }} />\r\n                            </IconButton>\r\n                        </Stack>\r\n                        <Divider />\r\n                        <Stack spacing={3} sx={{ flexGrow: 1, height: \"100%\" }}>\r\n                            <SimpleBarStyle timeout={500} clickOnTrack={false}>\r\n                                <Stack spacing={2.4}>\r\n                                    {/*  */}\r\n\r\n                                    {/* Call Logs*/}\r\n\r\n                                    {CallLogs.map((el) => <CallLogElement {...el} />)}\r\n\r\n                                </Stack>\r\n                            </SimpleBarStyle>\r\n\r\n                        </Stack>\r\n\r\n                    </Stack>\r\n\r\n                </Box>\r\n                {/* Right */}\r\n\r\n            </Stack>\r\n            {openDialog &&\r\n                <StartCall open={openDialog} handleClose={handleCloseDialog} />}\r\n        </>\r\n\r\n    );\r\n};\r\n\r\nexport default Call;\r\n","/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <line\n      x1=\"40\"\n      y1=\"128\"\n      x2=\"216\"\n      y2=\"128\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"128\"\n      y1=\"40\"\n      x2=\"128\"\n      y2=\"216\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <line\n      x1=\"40\"\n      y1=\"128\"\n      x2=\"216\"\n      y2=\"128\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"128\"\n      y1=\"40\"\n      x2=\"128\"\n      y2=\"216\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M216,120H136V40a8,8,0,0,0-16,0v80H40a8,8,0,0,0,0,16h80v80a8,8,0,0,0,16,0V136h80a8,8,0,0,0,0-16Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <line\n      x1=\"40\"\n      y1=\"128\"\n      x2=\"216\"\n      y2=\"128\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"128\"\n      y1=\"40\"\n      x2=\"128\"\n      y2=\"216\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <line\n      x1=\"40\"\n      y1=\"128\"\n      x2=\"216\"\n      y2=\"128\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"128\"\n      y1=\"40\"\n      x2=\"128\"\n      y2=\"216\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <line\n      x1=\"40\"\n      y1=\"128\"\n      x2=\"216\"\n      y2=\"128\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"128\"\n      y1=\"40\"\n      x2=\"128\"\n      y2=\"216\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst Plus = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nPlus.displayName = \"Plus\";\n\nexport default Plus;\n","/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <path\n      d=\"M24,60H152a32,32,0,0,1,32,32v96a8,8,0,0,1-8,8H48a32,32,0,0,1-32-32V68A8,8,0,0,1,24,60Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <polyline\n      points=\"184 112 240 80 240 176 184 144\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <path\n      d=\"M24,60H152a32,32,0,0,1,32,32v96a8,8,0,0,1-8,8H48a32,32,0,0,1-32-32V68A8,8,0,0,1,24,60Z\"\n      opacity=\"0.2\"\n    />\n    <path\n      d=\"M24,60H152a32,32,0,0,1,32,32v96a8,8,0,0,1-8,8H48a32,32,0,0,1-32-32V68A8,8,0,0,1,24,60Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <polyline\n      points=\"184 112 240 80 240 176 184 144\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M176,92v96a16,16,0,0,1-16,16H48A40,40,0,0,1,8,164V68A16,16,0,0,1,24,52H136A40,40,0,0,1,176,92Zm68-18.9a7.7,7.7,0,0,0-8,0L196,95.9a8,8,0,0,0-4,7v50.2a8,8,0,0,0,4,7l40,22.8a8.3,8.3,0,0,0,4,1.1,8,8,0,0,0,4-1.1,7.8,7.8,0,0,0,4-6.9V80A7.8,7.8,0,0,0,244,73.1Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <path\n      d=\"M24,60H152a32,32,0,0,1,32,32v96a8,8,0,0,1-8,8H48a32,32,0,0,1-32-32V68A8,8,0,0,1,24,60Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <polyline\n      points=\"184 112 240 80 240 176 184 144\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <path\n      d=\"M24,60H152a32,32,0,0,1,32,32v96a8,8,0,0,1-8,8H48a32,32,0,0,1-32-32V68A8,8,0,0,1,24,60Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <polyline\n      points=\"184 112 240 80 240 176 184 144\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <path\n      d=\"M24,60H152a32,32,0,0,1,32,32v96a8,8,0,0,1-8,8H48a32,32,0,0,1-32-32V68A8,8,0,0,1,24,60Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <polyline\n      points=\"184 112 240 80 240 176 184 144\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst VideoCamera = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nVideoCamera.displayName = \"VideoCamera\";\n\nexport default VideoCamera;\n"],"names":["styled","_ref","theme","position","borderRadius","backgroundColor","alpha","palette","background","default","marginRight","spacing","marginLeft","width","padding","height","pointerEvents","display","alignItems","justifyContent","InputBase","color","paddingLeft","concat","pathsByWeight","Map","set","React","x1","y1","x2","y2","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","points","d","renderPath","weight","renderPathForWeight","ArrowDownLeft","forwardRef","props","ref","IconBase","Object","assign","displayName","ArrowUpRight","StyledBadge","Badge","boxShadow","paper","top","left","animation","border","content","transform","opacity","CallLogElement","_ref2","online","incoming","missed","_jsx","Box","sx","mode","p","children","Stack","direction","_jsxs","overlap","anchorOrigin","vertical","horizontal","variant","Avatar","src","faker","image","avatar","alt","name","fullName","Typography","IconButton","Phone","CallElement","_ref3","VideoCamera","Transition","Slide","open","handleClose","list","Dialog","fullWidth","maxWidth","TransitionComponent","keepMounted","onClose","DialogTitle","DialogContent","Search","SearchIconWrapper","MagnifyingGlass","StyledInputBase","placeholder","inputProps","MembersList","map","el","Call","useTheme","openDialog","setOpenDialog","useState","_Fragment","overflowY","maxHeight","component","Link","onClick","Plus","style","primary","main","Divider","flexGrow","SimpleBarStyle","timeout","clickOnTrack","CallLogs","StartCall","handleCloseDialog"],"sourceRoot":""}