{"version":3,"file":"static/js/200.c47c03be.chunk.js","mappings":"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","sources":["components/ChatElement.js","components/Search/Search.js","components/Search/SearchIconWrapper.js","components/Search/StyledInputBase.js","components/hook-form/FormProvider.js","components/hook-form/RHFTextField.js","components/hook-form/RHFAutocomplete.js","sections/main/CreateGroup.js","pages/dashboard/Group.js"],"sourcesContent":["import { faker } from \"@faker-js/faker\";\r\nimport { Avatar, Badge, Box, Stack, Typography } from \"@mui/material\";\r\n\r\nimport { useTheme, styled } from \"@mui/material/styles\";\r\n\r\nconst StyledBadge = styled(Badge)(({ theme }) => ({\r\n    '& .MuiBadge-badge': {\r\n        backgroundColor: '#44b700',\r\n        color: '#44b700',\r\n        boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n        '&::after': {\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            width: '100%',\r\n            height: '100%',\r\n            borderRadius: '50%',\r\n            animation: 'ripple 1.2s infinite ease-in-out',\r\n            border: '1px solid currentColor',\r\n            content: '\"\"',\r\n        },\r\n    },\r\n    '@keyframes ripple': {\r\n        '0%': {\r\n            transform: 'scale(.8)',\r\n            opacity: 1,\r\n        },\r\n        '100%': {\r\n            transform: 'scale(2.4)',\r\n            opacity: 0,\r\n        },\r\n    },\r\n}));\r\n\r\nconst ChatElement = ({ id, name, img, msg, time, unread, online }) => {\r\n    const theme = useTheme();\r\n    return (\r\n        <Box sx={{\r\n            width: \"100%\",\r\n            borderRadius: 1,\r\n            backgroundColor: theme.palette.mode === \"light\" ? \"#fff\" : theme.palette.background.default,\r\n        }}   \r\n            p={2}\r\n        >\r\n            <Stack\r\n                direction={\"row\"}\r\n                alignItems={\"center\"}\r\n                justifyContent=\"space-between\"\r\n            >\r\n                <Stack direction={\"row\"} spacing={2}>\r\n                    {online ? <StyledBadge\r\n                        overlap=\"circular\"\r\n                        anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\r\n                        variant=\"dot\">\r\n                        <Avatar src={faker.image.avatar()} />\r\n                    </StyledBadge> : <Avatar src={faker.image.avatar()} />}\r\n\r\n                    <Stack spacing={0.3}>\r\n                        <Typography variant='subtitle2'>\r\n                            {name}\r\n                        </Typography>\r\n                        <Typography variant='caption'>\r\n                            {msg}\r\n                        </Typography>\r\n                    </Stack>\r\n                </Stack>\r\n                <Stack spacing={2} alignItems=\"center\">\r\n                    <Typography sx={{ fontWeight: 600 }} variant='caption'>\r\n                        {time}\r\n                    </Typography>\r\n                    <Badge color='primary' badgeContent={unread}></Badge>\r\n                </Stack>\r\n            </Stack>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default ChatElement;","import {styled, alpha} from \"@mui/material/styles\";\r\n\r\nconst Search = styled(\"div\")(({ theme }) => ({\r\n    position: \"relative\",\r\n    borderRadius: 20,\r\n    backgroundColor: alpha(theme.palette.background.default, 1),\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: \"100%\"\r\n}));\r\n\r\nexport default Search;","import {styled} from \"@mui/material/styles\";\r\n\r\nconst SearchIconWrapper = styled(\"div\")(({ theme }) => ({\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n}));\r\n\r\nexport default SearchIconWrapper;","import InputBase from \"@mui/material/InputBase\";\r\nimport {styled} from \"@mui/material/styles\";\r\n\r\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n    color: \"inherit\",\r\n    \"& .MuiInputBase-input\": {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n        width: \"100%\",\r\n    }\r\n}));\r\n\r\nexport default StyledInputBase;","/*\r\nimport PropTypes from 'prop-types';\r\n// form\r\nimport { FormProvider as Form } from 'react-hook-form';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nFormProvider.propTypes = {\r\n  children: PropTypes.node,\r\n  methods: PropTypes.object,\r\n  onSubmit: PropTypes.func,\r\n};\r\n\r\nexport default function FormProvider({ children, onSubmit, methods }) {\r\n  return (\r\n    <Form {...methods}>\r\n      <form onSubmit={onSubmit}>{children}</form>\r\n    </Form>\r\n  );\r\n}\r\n*/\r\n\r\nimport React from \"react\";\r\nimport { FormProvider as Form } from 'react-hook-form';\r\n\r\nconst FormProvider = ({ children, onSubmit, methods }) => {\r\n  return (\r\n    <Form {...methods}>\r\n      <form onSubmit={onSubmit}>{children}</form>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default FormProvider;","import PropTypes from 'prop-types';\r\n// form\r\nimport { useFormContext, Controller } from 'react-hook-form';\r\n// @mui\r\nimport { TextField } from '@mui/material';\r\n\r\nRHFTextField.propTypes = {\r\n    name: PropTypes.string,\r\n    helperText: PropTypes.node,\r\n  };\r\n\r\nexport default function RHFTextField({ name, helperText, ...other }) {\r\n    const { control } = useFormContext();\r\n\r\n    return (\r\n        <Controller\r\n            name={name}\r\n            control={control}\r\n            render={({ field, fieldState: { error } }) => (\r\n                < TextField\r\n                    {...field}\r\n                    fullWidth\r\n\r\n                    value={typeof field.value === 'number' && field.value === 0 ? '' : field.value}\r\n                    error={!!error}\r\n                    helperText={error ? error?.message : helperText}\r\n                    {...other}\r\n                />\r\n            )}\r\n            />\r\n\r\n            );\r\n  }","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useFormContext, Controller } from 'react-hook-form';\r\nimport { Autocomplete, TextField } from '@mui/material';\r\n\r\nRHFAutocomplete.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  helperText: PropTypes.node,\r\n  // Add other PropTypes as needed\r\n};\r\n\r\nexport default function RHFAutocomplete({ name, label, helperText, ...other }) {\r\n  const { control, setValue } = useFormContext();\r\n\r\n  return (\r\n    <Controller\r\n      name={name}\r\n      control={control}\r\n      render={({ field, fieldState: { error } }) => (\r\n        <Autocomplete\r\n          {...field}\r\n          onChange={(event, newValue) => setValue(name, newValue, { shouldValidate: true })}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              label={label}\r\n              error={!!error}\r\n              helperText={error ? error?.message : helperText}\r\n              {...params}\r\n            />\r\n          )}\r\n          {...other}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogContent,\r\n    DialogTitle,\r\n    Slide,\r\n    Stack,\r\n} from \"@mui/material\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { FormProvider, useForm } from \"react-hook-form\";\r\nimport { RHFTextField } from \"../../components/hook-form\";\r\nimport RHFAutocomplete from \"../../components/hook-form/RHFAutocomplete\";\r\n\r\nconst MEMBERS = [\"Name 1\", \"Name 2\", \"Name 3\"];\r\n\r\n// Transition component\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\n// CreateGroupForm component\r\nconst CreateGroupForm = ({ handleClose }) => {\r\n    const NewGroupSchema = Yup.object().shape({\r\n        title: Yup.string().required(\"Title is required\"),\r\n        members: Yup.array().min(2, \"Must have at least 2 members\"),\r\n    });\r\n\r\n    const defaultValues = {\r\n        title: \"\",\r\n        members: [],\r\n    };\r\n\r\n    const methods = useForm({\r\n        resolver: yupResolver(NewGroupSchema),\r\n        defaultValues,\r\n    });\r\n\r\n    // const { handleSubmit } = methods;\r\n\r\n    const onSubmit = async (data) => {\r\n        try {\r\n            //  API Call\r\n            console.log(\"DATA\", data);\r\n            // Close dialog after form submission\r\n            handleClose();\r\n        } catch (error) {\r\n            console.log(\"error\", error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <FormProvider {...methods}>\r\n            <Stack spacing={3}>\r\n                <RHFTextField name=\"title\" label=\"Title\" />\r\n                {/* Add more form fields here if needed */}\r\n                <RHFAutocomplete\r\n                    name=\"members\"\r\n                    label=\"Members\"\r\n                    multiple\r\n                    freeSolo\r\n                    options={MEMBERS.map((option) => option)}\r\n                    ChipProps={{ size: \"medium\" }} />\r\n\r\n                <Stack\r\n                    spacing={2}\r\n                    direction={\"row\"}\r\n                    alignItems=\"center\"\r\n                    justifyContent={\"end\"}\r\n                >\r\n                    <Button onClick={handleClose}>Cancel</Button>\r\n                    <Button type=\"submit\" variant=\"contained\">\r\n                        Create\r\n                    </Button>\r\n                </Stack>\r\n\r\n            </Stack>\r\n        </FormProvider>\r\n    );\r\n};\r\n\r\n// CreateGroup component\r\nconst CreateGroup = ({ open, handleClose }) => {\r\n    return (\r\n        <Dialog\r\n            fullWidth\r\n            maxWidth=\"xs\"\r\n            open={open}\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n            onClose={handleClose}\r\n            aria-describedby=\"alert-dialog-slide-description\"\r\n            sx={{ p: 4 }}\r\n        >\r\n            {/* Title */}\r\n            <DialogTitle sx={{mb: 2}}>{\"Create New Group\"}</DialogTitle>\r\n            <DialogContent sx={{ mt: 4 }}>\r\n                {/* Create Group Form */}\r\n                <CreateGroupForm handleClose={handleClose} />\r\n            </DialogContent>\r\n            {/* Content */}\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nexport default CreateGroup;\r\n\r\n\r\n// bjwdb","import { Box, Stack, Typography, Link, IconButton, Divider } from \"@mui/material\";\r\nimport React , { useState } from \"react\";\r\nimport { Search, SearchIconWrapper, StyledInputBase } from \"../../components/Search\";\r\nimport { MagnifyingGlass, Plus } from \"phosphor-react\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { SimpleBarStyle } from \"../../components/Scrollbar\";\r\nimport { ChatList } from \"../../data\";\r\nimport ChatElement from \"../../components/ChatElement\";\r\nimport CreateGroup from \"../../sections/main/CreateGroup\";\r\n\r\nconst Group = () => {\r\n    const [openDialog, setOpenDialog] = useState(false);\r\n\r\n    const handleCloseDialog = () => {\r\n        setOpenDialog(false);\r\n    }\r\n    // const handleOpenDialog = () => {\r\n    //     setOpenDialog(true);\r\n    // }\r\n\r\n    const theme = useTheme();\r\n    return (\r\n        <>\r\n            <Stack direction=\"row\" sx={{ width: \"100%\" }}>\r\n                {/* Left */}\r\n                <Box sx={{\r\n                    overflowY: \"scroll\",\r\n\r\n                    height: \"100vh\",\r\n                    width: 320,\r\n                    backgroundColor: (theme) =>\r\n                        theme.palette.mode === \"light\"\r\n                            ? \"#F8FAFF\"\r\n                            : theme.palette.background,\r\n\r\n                    boxShadow: \"0px 0px 2px rgba(0, 0, 0, 0.25)\",\r\n                }}\r\n                >\r\n\r\n                    <Stack p={3} spacing={2} sx={{ maxHeight: \"100vh\" }}>\r\n                        <Stack\r\n                            alignItems={\"center\"}\r\n                            justifyContent=\"space-between\"\r\n                            direction=\"row\"\r\n                        >\r\n                            <Typography variant=\"h5\">Groups</Typography>\r\n                        </Stack>\r\n                        {/* Search */}\r\n                        <Stack sx={{ width: \"100%\" }}>\r\n                            <Search>\r\n                                <SearchIconWrapper>\r\n                                    <MagnifyingGlass color=\"#709CE6\" />\r\n                                </SearchIconWrapper>\r\n                                <StyledInputBase\r\n                                    placeholder=\"Search…\"\r\n                                    inputProps={{ \"aria-label\": \"search\" }}\r\n                                />\r\n                            </Search>\r\n                        </Stack>\r\n                        <Stack justifyContent={\"space-between\"}\r\n                            alignItems={\"center\"}\r\n                            direction={\"row\"}>\r\n                            <Typography variant=\"subtitle2\" sx={{}} component={Link}>\r\n                                Create New Group\r\n                            </Typography>\r\n                            <IconButton  onClick={() =>{\r\n                                setOpenDialog(true);\r\n                            }}>\r\n                                <Plus style={{ color: theme.palette.primary.main }} />\r\n                            </IconButton>\r\n                        </Stack>\r\n                        <Divider />\r\n                        <Stack spacing={3} sx={{ flexGrow: 1, overflow: \"scroll\", height: \"100%\" }}>\r\n                            <SimpleBarStyle timeout={500} clickOnTrack={false}>\r\n                                <Stack spacing={2.4}>\r\n                                    {/*  */}\r\n                                    <Typography variant=\"subtitle2\" sx={{ color: \"#676667\" }}>\r\n                                        Pinned\r\n                                    </Typography>\r\n                                    {/* Chat List */}\r\n                                    {ChatList.filter((el) => el.pinned).map((el, idx) => {\r\n                                        return <ChatElement {...el} />;\r\n                                    })}\r\n\r\n                                    {/*  */}\r\n                                    <Typography variant=\"subtitle2\" sx={{ color: \"#676667\" }}>\r\n                                        All Chats\r\n                                    </Typography>\r\n                                    {/* Chat List */}\r\n                                    {ChatList.filter((el) => !el.pinned).map((el, idx) => {\r\n                                        return <ChatElement {...el} />;\r\n                                    })}\r\n                                </Stack>\r\n                            </SimpleBarStyle>\r\n\r\n                        </Stack>\r\n\r\n                    </Stack>\r\n\r\n                </Box>\r\n                {/* Right */}\r\n\r\n            </Stack>\r\n            {openDialog && <CreateGroup open={openDialog} handleClose={handleCloseDialog} />}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Group;"],"names":["StyledBadge","styled","Badge","_ref","theme","backgroundColor","color","boxShadow","concat","palette","background","paper","position","top","left","width","height","borderRadius","animation","border","content","transform","opacity","_ref2","id","name","img","msg","time","unread","online","useTheme","_jsx","Box","sx","mode","default","p","children","_jsxs","Stack","direction","alignItems","justifyContent","spacing","overlap","anchorOrigin","vertical","horizontal","variant","Avatar","src","faker","image","avatar","Typography","fontWeight","badgeContent","alpha","marginRight","marginLeft","padding","pointerEvents","display","InputBase","paddingLeft","onSubmit","methods","Form","RHFTextField","helperText","other","control","useFormContext","Controller","render","field","fieldState","error","TextField","fullWidth","value","message","RHFAutocomplete","label","setValue","Autocomplete","onChange","event","newValue","shouldValidate","renderInput","params","MEMBERS","Transition","React","props","ref","Slide","CreateGroupForm","handleClose","NewGroupSchema","Yup","shape","title","required","members","min","useForm","resolver","yupResolver","defaultValues","FormProvider","multiple","freeSolo","options","map","option","ChipProps","size","Button","onClick","type","open","Dialog","maxWidth","TransitionComponent","keepMounted","onClose","DialogTitle","mb","DialogContent","mt","Group","openDialog","setOpenDialog","useState","_Fragment","overflowY","maxHeight","Search","SearchIconWrapper","MagnifyingGlass","StyledInputBase","placeholder","inputProps","component","Link","IconButton","Plus","style","primary","main","Divider","flexGrow","overflow","SimpleBarStyle","timeout","clickOnTrack","ChatList","filter","el","pinned","idx","ChatElement","CreateGroup","handleCloseDialog"],"sourceRoot":""}